function [] = observer_study_gui2()
%OBSERVER_STUDY_GUI *Insert a one line summary here*
%   [] = observer_study_gui()
%
% Inputs:
%
% Outputs:
%
% Example:
%
% Notes:This version provides user a 'previous' button to review earlier
% rated masses
%
% See also:
%
% Created: 14-May-2009
% Author: Michael Berks 
% Email : michael.berks@postgrad.man.ac.uk 
% Phone : +44 (0)161 275 1241 
% Copyright: (C) University of Manchester

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% Program code that runs
%
%--------------------------------------------------------------------------
%Must have window style set to normal
orig_window_style = get(0,'DefaultFigureWindowStyle');
if ~strcmp(orig_window_style, 'normal')
    display('Warning: changing window style to normal for function');
    set(0,'DefaultFigureWindowStyle','normal');
end

%initialise_data;
ui = [];
axes_pos = [];
panel_pos = [];
curr_mass = [];
mass = [];
feedback_features = [];
num_feedback_features = [];
user_data = [];
valid_ids = 1:20;
buff = 10;

color1 = [1 1 1];
color2 = [212 208 200]/255;

screen_size = get(0,'ScreenSize');
mass_path = 'C:\isbe\dev\observer_study\data\';
user_path = 'C:\isbe\dev\observer_study\user_data\user';
mass_files = dir('C:\isbe\dev\observer_study\data\*.mat');

number_of_masses = length(mass_files);
regions_text = [];
initialise_data;

display('Start of function');
do_instructions = 1;
display_welcome_screen;
uiwait(ui.main_fig);

if do_instructions
    display_instruction_screen;
    uiwait(ui.main_fig);
    curr_mass = 1;
else
    curr_mass = find(~user_data.ratings(:,2), 1);
end

if ~isempty(curr_mass)
    do_feedback = 0;
    display_observer_screen;
    uiwait(ui.main_fig);
else
    answer = questdlg(...
        {'You already have a full set of ratings.';... 
        'Would you like to review your feedback of synthetic masses?'},...
        'Study completed', 'Yes', 'No', 'Yes');
    if strcmpi(answer, 'yes')
        do_feedback = 1;
    else
        do_feedback = 0;
    end
end

%First do_feedback check displays feedback study instructions and gives the
% user the choice to continue - however we won't even do this if the user 
% has chosen to quit before completing all the regions
if do_feedback;
    display_instruction_screen;
    uiwait(ui.main_fig);
    %The second do_feedback check actually starts the feedback experiment
    if do_feedback;
        start_feedback_study;
        uiwait(ui.main_fig);
    end
end

display_end_screen;
display('End of function');
set(0,'DefaultFigureWindowStyle',orig_window_style);

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% Auxilliary functions that control data
%
%--------------------------------------------------------------------------
    function initialise_data

    %be careful of random seed here - must load a new one in or
    %we'll keep generating the same number!
    
    %Generate session id
    rand('twister', sum(100*clock));
    
    %Generate random ordering of mass regions and pre-allocate ratings
    %array to store user responses
    user_data.ratings = zeros(number_of_masses, 2);
    user_data.ratings(:,1) = generate_mass_ordering;
    
    end
%--------------------------------------------------------------------------
    function mass_order = generate_mass_ordering 
        mass_order = rand;
    end

%--------------------------------------------------------------------------
    function start_feedback_study
        
        feedback_features = {...
            'Smells funny',...
            'Looks shifty',...
            'Bad dress sense'};
        num_feedback_features = length(feedback_features);
        
        user_synthetic = find(user_data.ratings(:,2) <= 2);
        mass_files(user_data.ratings(:,2) > 2) = [];
        curr_mass = 1;
        
        number_of_masses = length(user_synthetic);
        
        % Create the feedback structures if the don't aldreay exist (i.e.
        % we might be loading in a saved session)
        if ~isfield(user_data, 'feedback')
            user_data.feedback = zeros(number_of_masses, num_feedback_features+1);
            user_data.feedback(:,1) = user_synthetic';
            user_data.feedback_other = cell(number_of_masses,1);
        end
        initialise_feedback_screen;
        
    end

%--------------------------------------------------------------------------
    function save_user_data
        %save the users ratings to a file labelled with their unique file
        %ID
        filename = [user_path, zerostr(user_data.user_id,2), '.mat'];
        save(filename, 'user_data');
    end
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% Auxilliary functions so set up UI stuff (axes, buttons etc)
%
%--------------------------------------------------------------------------
    function display_welcome_screen
        %Generate main figure  
        ui.main_fig = figure(...
            'Position', [0 100 screen_size(3), screen_size(4)-100],...
            'Visible','on',...
            'Name', 'Synthetic mass observer study',...
            'NumberTitle', 'off',...
            'MenuBar', 'none',...
            'WindowStyle', 'normal',...
            'Color', color1,...
            'CloseRequestFcn',@quit_Callback);
        
        instruction = {...
            'Please enter your participant number in the box below',...
            'then press continue. If you have previously started a study ',...
            'this will load your existing answers and you will continue ',...
            'from the point at which you quit. Otherwise a new session ',...
            'will be created.'};
        
        ui.instruction = uicontrol(...
            'Style','text',...
            'Position', [screen_size(3)/4, 4*buff+100, screen_size(3)/2, 200],...
            'BackgroundColor', color1,...
            'Enable', 'on');
        
        instruction = textwrap(ui.instruction,instruction);
        set(ui.instruction, 'String', instruction);
        
        ui.user_id = uicontrol(...
            'Style','text',...
            'String', 'Participant number:',...
            'Position', [screen_size(3)/2 - 50, 3*buff+80, 100, 20],...
            'BackgroundColor', color1,...
            'Enable', 'on');
        
        ui.user_id_input = uicontrol(...
            'Style','edit',...
            'String',[],...
            'Position', [screen_size(3)/2 - 50, 2*buff+40, 100, 40],...
            'BackgroundColor', color1,...
            'Enable', 'on');
        
        ui.continue_button = uicontrol(...
            'Style','pushbutton',...
            'String','Continue',...
            'Tag','continue',...
            'Callback', @user_id_Callback,...
            'Position', [screen_size(3)/2 - 50, buff, 100, 40],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        
        movegui(ui.main_fig, 'northwest');
    end

%--------------------------------------------------------------------------
    function display_instruction_screen
        figure(ui.main_fig);
        ui.continue_button = uicontrol(...
            'Style','pushbutton',...
            'String','Continue',...
            'Tag','continue',...
            'Callback', @continue_Callback,...
            'Position', [screen_size(3)/2 - 50, buff, 100, 40],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        ui.instructions = uicontrol(...
            'Style','text',...
            'String', 'instructions here',...
            'Tag','file_open',...
            'BackgroundColor', color1,...
            'FontSize', 10,...
            'FontName', 'Arial',...
            'Position', [screen_size(3)/2 - 50, 2*buff+40, 100, 40]);
    end
%--------------------------------------------------------------------------
    function display_end_screen
        figure(ui.main_fig);
        ui.goodbye = uicontrol(...
            'Style','text',...
            'String', 'You are finished thank-you',...
            'Tag','file_open',...
            'BackgroundColor', color1,...
            'FontSize', 10,...
            'FontName', 'Arial',...
            'Position', [200, 400, 300, 300]);
    end
%--------------------------------------------------------------------------
    function initialise_feedback_screen
        
        x_max = screen_size(3);
        y_max = screen_size(4)-100;
        button_h = 40;
        button_w = 100;
        text_w = 250;
        y_bar = button_h + buff;
        y_menu = 20;
        axes_dim = y_max - y_bar - 2*buff - y_menu;
        centre = buff + axes_dim/2;
        
        axes_pos = [buff, y_bar+buff, axes_dim, axes_dim];
        panel_pos = [2*buff+axes_dim, y_bar+buff, x_max-axes_dim-3*buff, axes_dim];
        
        figure(ui.main_fig);
        %Re-create all the buttons and stuff (note old method of hiding
        %them then making them visible has been scrapped for the case that
        %we've loaded ina session straight into feedback mode and therefore
        %haven't already created them in study mode)
        ui.previous_image = uicontrol(...
            'Style','pushbutton',...
            'String','Previous',...
            'Tag','zoom_main',...
            'Callback', @previous_image_Callback,...
            'Position', [centre - button_w - text_w/2 - buff, buff, button_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'off');
        ui.next_image = uicontrol(...
            'Style','pushbutton',...
            'String','Next',...
            'Tag','pan_main',...
            'Callback', @next_image_Callback,...
            'Position', [centre + text_w/2 + buff, buff, button_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        ui.submit_answers = uicontrol(...
            'Style','pushbutton',...
            'String','Submit answers',...
            'Tag','add_mass',...
            'Callback', @submit_feedback_Callback,...
            'Position', [panel_pos(1), buff, text_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        
        ui.regions_text = uicontrol(...
            'Style','text',...
            'String', regions_text,...
            'Tag','file_open',...
            'BackgroundColor', color1,...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Position', [centre - text_w/2, buff, text_w, button_h]);
                            
        ui.axes_main = axes(...
            'Parent', ui.main_fig,...
            'Units', 'pixels',...
            'Visible', 'on');
        
        ui.panel = uipanel(...
            'Parent', ui.main_fig,...
            'Units', 'pixels',...
            'Position', panel_pos,...
            'Visible', 'on',...
            'BackgroundColor', color1);
        
        f_size = 0.8 / num_feedback_features;
        
        for ii = 1:num_feedback_features
            ui.feature(ii) = uicontrol(...
                'Style', 'Radio',...
                'String', feedback_features{ii},...
                'Units', 'normalized',...
                'Position',[0.05 0.2+(ii-1)*f_size 0.95 f_size],...
                'FontSize', 16,...
                'FontName', 'Arial',...
                'Parent',ui.panel,...
                'BackgroundColor', color1,...
                'Callback',@feedback_Callback);
        end
        ui.feature_other = uicontrol(...
            'Style', 'Edit',...
            'String', [],...
            'Units', 'normalized',...
            'Position',[0.025 0.025 0.95 0.15],...
            'FontSize', 9,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'Min', 0,...
            'Max', 2,...
            'HorizontalAlignment', 'left',...
            'Callback',@feedback_Callback);
        ui.additional_comments = uicontrol(...
            'Style', 'Text',...
            'String', 'Any other comments:',...
            'Units', 'normalized',...
            'Position',[0.025 0.176 0.95 0.022],...
            'FontSize', 9,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HorizontalAlignment', 'left',...
            'Callback',@feedback_Callback);
        
        ui.region = imagesc([]);
        
        set(ui.axes_main,...
            'Position', axes_pos,...
            'Xtick', [],...
            'Ytick', [],...
            'YDir','reverse',...
            'Xlim', [0.5 axes_pos(3)+0.5],...
            'Ylim', [0.5 axes_pos(4)+0.5]);
        
        set(ui.main_fig,...
            'Colormap', gray(256));
        
        update_study_screen;
        
    end

%--------------------------------------------------------------------------
    function display_observer_screen
        figure(ui.main_fig);
        
        x_max = screen_size(3);
        y_max = screen_size(4)-100;
        button_h = 40;
        button_w = 100;
        text_w = 250;
        y_bar = button_h + buff;
        y_menu = 20;
        axes_dim = y_max - y_bar - 2*buff - y_menu;
        centre = buff + axes_dim/2;
        
        %bar_pos = [0 0 x_max, y_bar];
        axes_pos = [buff, y_bar+buff, axes_dim, axes_dim];
        panel_pos = [2*buff+axes_dim, y_bar+buff, x_max-axes_dim-3*buff, axes_dim];
                                   
        ui.previous_image = uicontrol(...
            'Style','pushbutton',...
            'String','Previous',...
            'Tag','zoom_main',...
            'Callback', @previous_image_Callback,...
            'Position', [centre - button_w - text_w/2 - buff, buff, button_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'off');
        ui.next_image = uicontrol(...
            'Style','pushbutton',...
            'String','Next',...
            'Tag','pan_main',...
            'Callback', @next_image_Callback,...
            'Position', [centre + text_w/2 + buff, buff, button_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        ui.submit_answers = uicontrol(...
            'Style','pushbutton',...
            'String','Submit answers',...
            'Tag','add_mass',...
            'Callback', @submit_ratings_Callback,...
            'Position', [panel_pos(1), buff, text_w, button_h],...
            'BackgroundColor', color2,...
            'Enable', 'on');
        
        ui.regions_text = uicontrol(...
            'Style','text',...
            'String', regions_text,...
            'Tag','file_open',...
            'BackgroundColor', color1,...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Position', [centre - text_w/2, buff, text_w, button_h]);
                            
        ui.axes_main = axes(...
            'Parent', ui.main_fig,...
            'Units', 'pixels',...
            'Visible', 'on');
        
        ui.panel = uibuttongroup(...
            'Parent', ui.main_fig,...
            'Units', 'pixels',...
            'Position', panel_pos,...
            'Visible', 'on',...
            'BackgroundColor', color1,...
            'SelectionChangeFcn', @rating_Callback);
        
        ui.def_s = uicontrol(...
            'Style', 'Radio',...
            'String', 'Definitely synthetic',...
            'Units', 'normalized',...
            'Position',[0.05 0.8 1 0.2],...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HandleVisibility','off');
        ui.pos_s = uicontrol(...
            'Style', 'Radio',...
            'String', 'Probably synthetic',...
            'Units', 'normalized',...
            'Position',[0.05 0.6 1 0.2],...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HandleVisibility','off');
        ui.unsure = uicontrol(...
            'Style', 'Radio',...
            'String', 'Don''t know',...
            'Units', 'normalized',...
            'Position',[0.05 0.4 1 0.2],...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HandleVisibility','off');
        ui.pos_r = uicontrol(...
            'Style', 'Radio',...
            'String', 'Probably real',...
            'Units', 'normalized',...
            'Position',[0.05 0.2 1 0.2],...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HandleVisibility','off');
        ui.def_r = uicontrol(...
            'Style', 'Radio',...
            'String', 'Definitely real',...
            'Units', 'normalized',...
            'Position',[0.05 0.0 1 0.2],...
            'FontSize', 16,...
            'FontName', 'Arial',...
            'Parent',ui.panel,...
            'BackgroundColor', color1,...
            'HandleVisibility','off');
        
        set(ui.panel, 'SelectedObject', []);
         
        set(ui.main_fig,...
            'Colormap', gray(256));
        ui.region = imagesc([]);
        
        set(ui.axes_main,...
            'Position', axes_pos,...
            'Xtick', [],...
            'Ytick', [],...
            'YDir','reverse',...
            'Xlim', [0.5 axes_pos(3)+0.5],...
            'Ylim', [0.5 axes_pos(4)+0.5]);
        
        update_study_screen;

    end

% --------------------------------------------------------------------
    function update_study_screen
    % 
    %Find out if we're in the observer study or the feedback part
        if do_feedback
            %Feedback study:
            % Check if a feedback exists for this mass a check radio buttons
            % accordingly
            for ii = 1:num_feedback_features;
                set(ui.feature(ii), 'Value', user_data.feedback(curr_mass, ii+1));
            end
            set(ui.feature_other, 'String', user_data.feedback_other{curr_mass});
        else
            %Main study:
            % Check if a ratings exists for this mass a check radio button
            % accordingly
            rating = user_data.ratings(curr_mass, 2);
            switch rating
                case 0
                    set(ui.panel, 'SelectedObject', []);
                case 1
                    set(ui.panel, 'SelectedObject', ui.def_s);
                case 2
                    set(ui.panel, 'SelectedObject', ui.pos_s);
                case 3
                    set(ui.panel, 'SelectedObject', ui.unsure);
                case 4
                    set(ui.panel, 'SelectedObject', ui.pos_r);
                case 5
                    set(ui.panel, 'SelectedObject', ui.def_r);
            end
        end
        
        %load in the new mass and display
        mass = u_load([mass_path, mass_files(curr_mass).name]);
        set(ui.region,...
            'CData', mass.mass_ROI,...
            'XData', [1 axes_pos(3)],...
            'YData', [1 axes_pos(4)]);
        
        %Update the number of regions text
        regions_text = ['Mass region: ', num2str(curr_mass), ' of ', num2str(number_of_masses)];
        set(ui.regions_text, 'String', regions_text);
        
        %Enable/disable next/previous as appropriate
        if curr_mass == number_of_masses
            set(ui.next_image, 'Enable', 'off');
        else
            set(ui.next_image, 'Enable', 'on');
        end
        if curr_mass == 1
            set(ui.previous_image, 'Enable', 'off');
        else
            set(ui.previous_image, 'Enable', 'on');
        end
    end

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% UI Callbacks
%
%--------------------------------------------------------------------------
% --------------------------------------------------------------------
    function user_id_Callback(hObject, eventdata) %#ok
    % Callback to allow us to continue
        user_id = str2double(get(ui.user_id_input, 'String'));
        if ismember(user_id, valid_ids)
            filename = [user_path, zerostr(user_id,2), '.mat'];
            if exist(filename, 'file')
                %Set do_instructions to 0 to load existing data and resume study
                do_instructions = 0;
                l = load(filename);
                %this will load a structure called user_data - avoid u_load
                %here as minimising non-standard functions to be compiled
                user_data = l.user_data; clear l;
            else
                %Set do_instructions to 1 to display instructions then start
                %new study
                user_data.user_id = user_id;
                do_instructions = 1;
            end
            delete(ui.instruction);
            delete(ui.user_id);
            delete(ui.user_id_input);
            delete(ui.continue_button);
            uiresume(ui.main_fig);
        else
            warndlg('Invalid participant ID, please enter again', 'Invalid ID', 'modal');
            set(ui.user_id_input, 'String', []);
        end   
            
    end

% --------------------------------------------------------------------
    function continue_Callback(hObject, eventdata) %#ok
    % Callback to allow us to continue
        delete(ui.continue_button);
        delete(ui.instructions);
        uiresume(ui.main_fig);
    end
    
% --------------------------------------------------------------------
    function quit_Callback(hObject, eventdata) %#ok
    % Callback executed if the user tries to quit
        
        %Check if they're ok to quit
        
        %Close the main figure
        delete(ui.main_fig);
        
        %Reset the window style to its original form
        set(0,'DefaultFigureWindowStyle',orig_window_style);
        clear all;
    end

% --------------------------------------------------------------------
    function previous_image_Callback(hObject, eventdata) %#ok
    % Callback to the "zoom" button allowing the user to zoom in/out the 
    % mammogram
        curr_mass = curr_mass - 1;
        update_study_screen;
    end

% --------------------------------------------------------------------
    function next_image_Callback(hObject, eventdata) %#ok
    % Callback to the "pan" button allowing the user to pan around the 
    % mammogram
        curr_mass = curr_mass + 1;
        update_study_screen;
    end

% --------------------------------------------------------------------
    function submit_ratings_Callback(hObject, eventdata) %#ok
    % Callback to the "select nipple" allowing the user to mark the 
    % position of the nipple on the mammogram
    
        if any(~user_data.ratings(:,2))
            %Study not completed - query whether they want to continue
            queststr = 'You have not rated all of the masses in the study. Please either: ';
            continue_study = 'Continue the study';
            save_quit = 'Save answers and quit';

            answer = questdlg(queststr, 'Study not finished', continue_study, save_quit, continue_study);
            
            %if continue just exit this function
            if strcmpi(answer, continue_study);
                return;
            end
            %if they choose to quit now don't show the feedback instructions
            % do_feedback already set to zero 
        else
            %Study completed, show feedback instructions
            do_feedback = 1;
        end

        %Delete the buttons and stuff
        delete(ui.previous_image);
        delete(ui.next_image);
        delete(ui.submit_answers);
        delete(ui.regions_text);
        delete(ui.axes_main);
        delete(ui.panel);        
        
        %Save the user ratings
        save_user_data;
        
        %Allow main function to continue
        uiresume(ui.main_fig);
        
    end

% --------------------------------------------------------------------
    function submit_feedback_Callback(hObject, eventdata) %#ok
    % Callback to the "select nipple" allowing the user to mark the 
    % position of the nipple on the mammogram
        if any(all(~user_data.feedback(:,2:end),2) & cellfun(@isempty, user_data.feedback_other))
            %Study not completed - query whether they want to continue
            queststr = 'You have not given feedback for all of the masses rated as synthetic. Please either: ';
            continue_study = 'Continue the study';
            save_quit = 'Save answers and quit';

            answer = questdlg(queststr, 'Feedback not finished', continue_study, save_quit, continue_study);
            
            %if continue just exit this function
            if strcmpi(answer, continue_study);
                return;
            end
        end
        
        %Save the feedback
        save_user_data;
        
        %Delete the buttons, text etc. from figure
        delete(ui.previous_image);
        delete(ui.next_image);
        delete(ui.submit_answers);
        delete(ui.regions_text);
        delete(ui.region);
        delete(ui.axes_main);
        delete(ui.panel);        
        
        %Save the user ratings
        save_user_data;
        
        %Allow main function to continue
        uiresume(ui.main_fig);
    end
% --------------------------------------------------------------------
    function rating_Callback(hObject, eventdata) %#ok
        
        rating = get(ui.panel, 'SelectedObject');
        switch rating
            case ui.def_s
                user_data.ratings(curr_mass, 2) = 1;
            case ui.pos_s
                user_data.ratings(curr_mass, 2) = 2;
            case ui.unsure
                user_data.ratings(curr_mass, 2) = 3;
            case ui.pos_r
                user_data.ratings(curr_mass, 2) = 4;
            case ui.def_r
                user_data.ratings(curr_mass, 2) = 5;
        end

    end
% --------------------------------------------------------------------
    function feedback_Callback(hObject, eventdata) %#ok
    %
        for ii = 1:num_feedback_features;
            if hObject == ui.feature(ii);
                user_data.feedback(curr_mass, ii+1) = get(ui.feature(ii), 'Value');
            end
        end
        if hObject == ui.feature_other;
            user_data.feedback_other{curr_mass} = get(ui.feature_other, 'String');
        end
    end

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%---------------------- END OF FUNCTION -----------------------------------
%--------------------------------------------------------------------------
end