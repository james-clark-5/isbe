function [] = stepwedge_gui(varargin)
%STEPWEDGE_GUI *Insert a one line summary here*
%   [] = stepwedge_gui()
%
% Inputs:
%
% Outputs:
%
% Example:
%
% Notes:
%
% See also:
%
% Created: 25-Oct-2010
% Author: Michael Berks 
% Email : michael.berks@manchester.ac.uk 
% Phone : +44 (0)161 275 7669 
% Copyright: (C) University of Manchester 

%create args to be passed to form reader function
args = u_packargs(varargin, 0, ...
            'MammoNames', [],...
            'MammoDir', '',...
            'SegmentationDir', '',...
            'MarkupDir', '',...
            'ResultsDir', '',...
            'CalibrationDir', '',...
            'CalibrationName', '',...
            'ExcelDir', '',...
            'ExcelName', '',...
            'ResizeFactor', 0.176, ...
            'DebugMode', 0, ...
            'DoAutoMarker', 1,...
            'MarkerTemplate', 'marker_template.mat',...
            'MarkerReductionFactor', 0.25,...
            'MarkerRadius',    50,...
            'ThicknessMethod', 1, ...
            'TaperMethod', 1, ...
            'MaxPairs', [],...
            'DoNipple', 0,...
            'DoAnodeHeel', 0,...
            'GenerateTextResults', 0,...
            'StepHeights', [],...
            'NotchIdx',[],...
            'NumBits', 12,...
            'ImageFormat', 'tif',...
            'User', [] ...
			);
clear varargin;

%specify default locations for browser to open
try
    fid = fopen('default_locations.txt');
    def_text = textscan(fid, '%s %s', 'delimiter', '=');
    
    args.MammoDir = load_value_from(def_text, 'mammogram_dir', args.MammoDir);
    args.SegmentationDir = load_value_from(def_text, 'segmentation_dir', args.SegmentationDir);
    args.MarkupDir = load_value_from(def_text, 'markup_dir', args.MarkupDir);
    args.ResultsDir = load_value_from(def_text, 'results_dir', args.ResultsDir);
    args.CalibrationDir = load_value_from(def_text, 'calibration_dir', args.CalibrationDir);
    args.CalibrationName = load_value_from(def_text, 'calibration_name', args.CalibrationName);
    args.ExcelDir = load_value_from(def_text, 'excel_dir', args.ExcelDir);
    args.ExcelName = load_value_from(def_text, 'excel_name', args.ExcelName);
    args.ResizeFactor = load_value_from(def_text, 'ResizeFactor', args.ResizeFactor);
    args.DebugMode = load_value_from(def_text, 'DebugMode', args.DebugMode);
    args.DoAutoMarker = load_value_from(def_text, 'DoAutoMarker', args.DoAutoMarker);
    args.MarkerTemplate = load_value_from(def_text, 'MarkerTemplate', args.MarkerTemplate);
    args.MarkerReductionFactor = load_value_from(def_text, 'MarkerReductionFactor', args.MarkerReductionFactor);
    args.MarkerRadius = load_value_from(def_text, 'MarkerRadius', args.MarkerRadius);
    args.ThicknessMethod = load_value_from(def_text, 'ThicknessMethod', args.ThicknessMethod);
    args.TaperMethod = load_value_from(def_text, 'TaperMethod', args.TaperMethod);
    args.MaxPairs = load_value_from(def_text, 'MaxPairs', args.MaxPairs);
    args.DoNipple = load_value_from(def_text, 'DoNipple', args.DoNipple);
    args.DoAnodeHeel = load_value_from(def_text, 'DoAnodeHeel', args.DoAnodeHeel);
    args.GenerateTextResults = load_value_from(def_text, 'GenerateTextResults', args.GenerateTextResults);
    args.StepHeights = load_value_from(def_text, 'StepHeights', args.StepHeights);
    args.NotchIdx = load_value_from(def_text, 'NotchIdx', args.NotchIdx);
    args.NumBits = load_value_from(def_text, 'NumBits', args.NumBits);
    args.ImageFormat = load_value_from(def_text, 'ImageFormat', args.ImageFormat);
    
    fclose(fid);
catch lasterr
    display(lasterr.message);
    display('Problem opening default file locations');
end




%Create the main figure;
main_fig = figure(...
    'Name', 'Stepwedge density software',...
    'WindowStyle', 'normal',...
    'MenuBar', 'none',...
    'NumberTitle', 'off',...
    'Position', [100 100 640 360]);

%Create the UI controls for the main fig
%-------
mammograms_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 310 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', args.MammoDir);

mammograms_select = uicontrol(...
    'Style', 'pushbutton',...
    'Position', [530 310 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @mammogram_select_Callback);%#ok

mammograms_text = uicontrol(...
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Mammograms dir:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 310 100 25]);%#ok

%-------
segmentation_dir_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 260 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', args.SegmentationDir);

segmentation_dir_select = uicontrol(... 
    'Style', 'pushbutton',...
    'Position', [530 260 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @segmentation_select_Callback);%#ok

segmentation_dir_text = uicontrol(... 
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Segmentation dir:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 260 100 25]); %#ok
%-------

markup_dir_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 210 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', args.MarkupDir);

markup_dir_select = uicontrol(... 
    'Style', 'pushbutton',...
    'Position', [530 210 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @markup_select_Callback);%#ok

markup_dir_text = uicontrol(... 
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Markup dir:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 210 100 25]); %#ok

%-------
results_dir_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 160 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', args.ResultsDir);

results_dir_select = uicontrol(... 
    'Style', 'pushbutton',...
    'Position', [530 160 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @results_select_Callback);%#ok

results_dir_text = uicontrol(... 
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Results dir:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 160 100 25]); %#ok

%-------
calibration_data_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 110 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', [args.CalibrationDir args.CalibrationName]);

calibration_data_select = uicontrol(... 
    'Style', 'pushbutton',...
    'Position', [530 110 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @calibration_select_Callback);%#ok

calibration_data_text = uicontrol(... 
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Calibration file:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 110 100 25]);%#ok

%-------
excel_data_box = uicontrol(...
    'Style', 'edit',...
    'Position', [120 60 400 40],...
    'BackgroundColor', [1 1 1],...
    'Parent', main_fig,...
    'String', [args.ExcelDir args.ExcelName]);

excel_data_select = uicontrol(... 
    'Style', 'pushbutton',...
    'Position', [530 60 100 40],...
    'String', 'Select',...
    'Parent', main_fig,...
    'Callback', @excel_select_Callback);%#ok

excel_data_text = uicontrol(... 
    'Style','text',...
    'BackgroundColor', get(main_fig, 'Color'),...
    'FontName', 'Arial',...
    'String', 'Excel file:',...
    'HorizontalAlignment', 'right',...
    'Position', [10 60 100 25]);%#ok

%-------
segment_mammograms = uicontrol(...
    'Style', 'pushbutton',...
    'Position', [10 10 200 40],...
    'String', 'Segment mammograms',...
    'Parent', main_fig,...
    'Callback', @segment_mammograms_Callback);%#ok

start_processing = uicontrol(...
    'Style', 'pushbutton',...
    'Position', [220 10 200 40],...
    'String', 'Start processing',...
    'Parent', main_fig,...
    'Callback', @start_processing_Callback);%#ok

results_to_excel = uicontrol(...
    'Style', 'pushbutton',...
    'Position', [430 10 200 40],...
    'String', 'Copy results to Excel',...
    'Parent', main_fig,...
    'Callback', @results_to_excel_Callback);%#ok

% advanced_options = uicontrol(...
%     'Style', 'pushbutton',...
%     'Position', [310 10 100 40],...
%     'Parent', main_fig,...
%     'String', 'Advanced options');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Callbacks for UI controls
%--------------------------------------------------------------------------
    function mammogram_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        [mammo_names mammo_dir] = ...
            uigetfile([args.MammoDir '\*.' args.ImageFormat], 'Select the mammograms to process','Multiselect','on');
        if ~isnumeric(mammo_names)
            if iscell(mammo_names)
                num_mammos = [num2str(length(mammo_names)) ' mammograms'];
            else
                num_mammos = '1 mammogram';
            end
            mammo_str = ['... (' num_mammos ' selected)'];
            
            set(mammograms_box, 'string', [mammo_dir mammo_str]);
            args.MammoNames = mammo_names;
            args.MammoDir = mammo_dir;
        end
    end
% --------------------------------------------------------------------
    function segmentation_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        segmentation_dir = ...
            uigetdir(args.SegmentationDir, 'Select the directory containing breast segmentations');
        if ~isnumeric(segmentation_dir)
            set(segmentation_dir_box, 'string', segmentation_dir);
            args.SegmentationDir = segmentation_dir;
        end
    end
% --------------------------------------------------------------------
    function markup_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        markup_dir = ...
            uigetdir(args.MarkupDir, 'Select the directory to save markup data to');
        if ~isnumeric(markup_dir)
            set(markup_dir_box, 'string', markup_dir);
            args.MarkupDir = markup_dir;
        end
    end
% --------------------------------------------------------------------
    function results_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        results_dir = ...
            uigetdir(args.ResultsDir, 'Select the directory to save results data to');
        if ~isnumeric(results_dir)
            set(results_dir_box, 'string', results_dir);
            args.ResultsDir = results_dir;
        end
    end
%--------------------------------------------------------------------------
    function calibration_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        [calibration_name, calibration_dir] = ...
            uigetfile([args.CalibrationDir '*.mat'],...
                'Select the calibration data for thickness marker and stepwedge');
        if ~isnumeric(calibration_name)
            set(calibration_data_box, 'string', [calibration_dir calibration_name]);
            args.CalibrationDir = calibration_dir;
            args.CalibrationName = calibration_name;
        end
    end
%--------------------------------------------------------------------------
    function excel_select_Callback(hObject, eventdata) %#ok
    % Callback to...
        [xls_name, xls_dir] = ...
            uigetfile([args.ExcelDir '*.mat'],...
                'Select an Excel spreadsheet to save the results to');
        if ~isnumeric(xls_name)
            set(excel_data_box, 'string', [xls_dir xls_name]);
            args.ExcelDir = xls_dir;
            args.ExcelName = xls_name;
        end
    end
%--------------------------------------------------------------------------
    function start_processing_Callback(hObject, eventdata) %#ok
    % Callback to...
        if isempty(args.MammoNames)
            warndlg('Please select 1 or more mammograms to continue',...
                'No mammograms selected');
        elseif isempty(args.CalibrationName)
            warndlg('Please select calibration data to continue',...
                'No calibration data');
        else
            stepwedge(args);
        end
    end
%--------------------------------------------------------------------------
    function segment_mammograms_Callback(hObject, eventdata) %#ok
    % Callback to...
        if isempty(args.MammoNames)
            warndlg('Please select 1 or more mammograms to continue',...
                'No mammograms selected');
        else
            num_mammos = length(args.MammoNames);
            dlg = helpdlg({['Processing ' num2str(num_mammos) ' image(s)'];...
                    'May take several minutes'},...
                    'Segmenting images');
                
            [failed_list] = segment_breast_batch(args.MammoDir, args.SegmentationDir, [], args.MammoNames, 0, 0);          
            close(dlg);
            
            results_file = [args.SegmentationDir '\segmentation_results.txt'];
            
            if ~isempty(failed_list)
   
                warndlg({[num2str(length(failed_list)) ' image(s) failed to process correctly.'];...
                    ['See ' results_file ' for a list of failed images.']},...
                    'Some segmentations failed');
            else
                helpdlg('All images successfully processed',...
                    'Segmenting images');
            end
        end
    end

%--------------------------------------------------------------------------
    function results_to_excel_Callback(hObject, eventdata) %#ok
    % Callback to...
        if isempty(args.ResultsDir)
            warndlg('Please make sure the results directory is not empty',...
                'No results selected');
        else
            helpdlg({'Density results are being copied to excel';...
                'May take several minutes'},...
                'Copying results');
                
            density_results_to_excel(args.ResultsDir, [args.ExcelDir args.ExcelName]);
            
            helpdlg('Results complete!',...
                'Copying results');
        
        end
    end

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%---------------------- END OF FUNCTION -----------------------------------
%--------------------------------------------------------------------------
end

