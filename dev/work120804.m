dx = 64;
dy = 64;
cx = 32;
cy = 32;
snr = 0.5;

mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\labels
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\orientations
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\widths
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\fov_masks
for ii = 1:500
    edge_width = sample_uniform([1 8]);
    line_width = sample_uniform([1 8]);
    edge_contrast = sample_uniform([4 8]);
    line_contrast = sample_uniform([4 8]);
    line_ori = sample_uniform([0 180]);
    edge_ori = sample_from_normal(line_ori + 90, 30^2, 1);

    [line, label, ~, orientation_map] =...
        create_ellipse_bar(line_width/2, line_contrast, line_ori, dy, dx, cx, cy);
    
    width_map = label * line_width;
    
    edge = create_sin_step(edge_width/2, edge_contrast, edge_ori, dy, dx, cx, cy);
    
    signal = 1 + line + edge;
    test_image = ricernd(signal, snr);
    
    fov_mask = true(dy,dx);
    fov_mask([1 end],:,:) = 0;
    fov_mask(:,[1 end],:) = 0;
    
    
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images\image' zerostr(ii, 4) '.mat'],...
        'test_image');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\orientations\image' zerostr(ii, 4) '_ori.mat'],...
        'orientation_map');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\labels\image' zerostr(ii, 4) '_label.mat'],...
        'label');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\widths\image' zerostr(ii, 4) '_width.mat'],...
        'width_map');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\fov_masks\image' zerostr(ii, 4) '_fov.mat'],...
        'fov_mask');
    
    if ii <= 10
        figure; 
        subplot(1,2,1); imgray(signal);
        subplot(1,2,2); imgray(test_image);
    end
end
%%
dx = 64;
dy = 64;
cx = 32;
cy = 32;
snr = 0.5;

mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\labels
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\orientations
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\widths
for ii = 1:100
    edge_width = sample_uniform([1 8]);
    line_width = sample_uniform([1 8]);
    edge_contrast = sample_uniform([4 8]);
    line_contrast = sample_uniform([4 8]);
    line_ori = sample_uniform([0 180]);
    edge_ori = sample_from_normal(line_ori + 90, 30^2, 1);

    [line, label, ~, orientation_map] =...
        create_ellipse_bar(line_width/2, line_contrast, line_ori, dy, dx, cx, cy);
    width_map = label * line_width;
    
    edge = create_sin_step(edge_width/2, edge_contrast, edge_ori, dy, dx, cx, cy);
    
    signal = 1 + line + edge;
    test_image = ricernd(signal, snr);
    
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\image' zerostr(ii, 4) '.mat'],...
        'test_image');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\orientations\image' zerostr(ii, 4) '_ori.mat'],...
        'orientation_map');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\labels\image' zerostr(ii, 4) '_label.mat'],...
        'label');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\widths\image' zerostr(ii, 4) '_width.mat'],...
        'width_map');
    
    if ii <= 10
        figure; 
        subplot(1,2,1); imgray(signal);
        subplot(1,2,2); imgray(test_image);
    end
end
%%
dx = 64;
dy = 64;
cx = 32;
cy = 32;
snr = 0.5;

mkdir C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\images
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\labels
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\sampling_masks
for ii = 1:500
    edge_width = sample_rand_exp([1 8], 4);
    line_width = sample_rand_exp([1 4], 3);
    edge_contrast = sample_rand_exp([1 8], 4);
    line_contrast = sample_rand_exp([1 8], 4);
    edge_ori = sample_uniform([0 180]);
    line_ori = sample_uniform([0 180]);

    [line, ~, line_label] =...
        create_ellipse_bar(line_width/2, line_contrast, line_ori, dy, dx, cx, cy);
    [edge, ~, edge_label] = create_sin_step(edge_width/2, edge_contrast, edge_ori, dy, dx, cx, cy);
    
    label = zeros(dx,dy);
    label(line_label) = 1;
    label(edge_label) = 2;
    signal = 1 + line + edge;
    test_image = ricernd(signal, snr);
    
    mask(:,:,1) = label > 0;
    mask(:,:,2) = ~label;
    
    mask([1 end],:,:) = 0;
    mask(:,[1 end],:) = 0;
    
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\images\image' zerostr(ii, 4) '.mat'],...
        'test_image');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\labels\image' zerostr(ii, 4) '_label.mat'],...
        'label');
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\line_edge64\training\sampling_masks\image' zerostr(ii, 4) '_mask.mat'],...
        'mask');
    
    if ii <= 10
        figure; 
        subplot(1,2,1); imgray(signal);
        subplot(1,2,2); imgray(test_image);
    end
end
%%
args(1).prediction_type = 'rf_classification';
args(2).prediction_type = 'rf_regression';

args(1).output_type = 'detection';
args(2).output_type = 'orientation';

args(1).split_criterion = 'gdi';
args(2).split_criterion = 'mabs';

args(3) = args(1);

args(1).decomp_type = 'dt';
args(2).decomp_type = 'g2d';
args(3).decomp_type = 'dt';
for ii = 3
    
    build_predictor(...
        'task_id',				1, ...
        'job_id',				['pc' datestr(now,'yyyymmddTHHMMSS')], ...
        ... % Folders
        'image_root',           [asymmetryroot,'data/synthetic_lines/edge64/training/'],...
        'model_root',           [asymmetryroot,'data/models/synthetic_lines/'], ...
        ... % Output parameters
        'output_type',          args(ii).output_type, ...
            'presence_dir',         [],...
            'class_dir',            [],...
            'ori_dir',              'orientations',...
            'width_dir',            [], ...
            'bg_ratio',				1, ...
        ... % Sampling parameters
        'num_samples',			100000, ...
        'max_n_images',         [],...
        'sampling_method',      'generate_training_data', ...
        'image_type', 			unixenv('IMAGE_TYPE','real'), ...
            ... % Image synthesis parameters
            'image_dir',            'images',...
            'fov_mask_dir',         [],...
            'fg_mask_dir',          'labels',...
            'bg_prob_dir',          [],...
            'normalise', 			0, ...
            ... % Saved training data parameters
            'save_training_data',	false, ...
            'training_data_dir', 	[], ...
            'training_data',		[], ... % ???
        ... % Image feature/decomposition parameters
        'num_levels', 			4, ...
        'win_size',				1, ...
        'pca_filename',         [], ...
        'do_max',				false, ...
        'rotate',				false, ...
        'decomp_type', 			args(ii).decomp_type, ...
            ... % DTCWT parameters
            'feature_shape', 		'rect', ...
            'feature_type',			'conj', ...
            ... % Gaussian derivative parameters
            'sigma_range', 			[1,2,4,8], ...
        ... % Predictor parameters
        'prediction_type',		args(ii).prediction_type, ...
            ... % Tree/Forest parameters
            'n_trees',				100, ...
            'split_criterion',      args(ii).split_criterion,...
            'var_criterion',		unixenv('VAR_CRITERION','mabs'),...
            'split_min',			unixenv('SPLIT_MIN',10), ...
            'end_cut_min',			unixenv('END_CUT_MIN',1), ...
            'do_ubound',			unixenv('DO_UBOUND',1), ...
            'do_circular',			unixenv('DO_CIRCULAR',[]), ...
            'w_prior',				unixenv('W_PRIOR',0), ...
            'impure_thresh',		unixenv('IMPURE_THRESH',1e-4), ...
            'minimise_size',		unixenv('MINIMIZE_TREE',0), ...
            'd',                    unixenv('d',[]), ...
               ... % Miscellaneous parameters
        'overwrite',			unixenv('OVERWRITE',false), ...
        'use_nag',				unixenv('USE_NAG',false),...
        'rand_seed',			unixenv('RAND_SEED',[]) ...
    );
end
%%
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dt\job_args.mat');
job_args.decomposition_args.normalise = job_args.sampling_args.normalise;
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dt\job_args.mat', 'job_args');
%
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\g2\job_args.mat');
job_args.decomposition_args.normalise = job_args.sampling_args.normalise;
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\g2\job_args.mat', 'job_args');
%
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\dt\job_args.mat');
job_args.decomposition_args.normalise = job_args.sampling_args.normalise;
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\dt\job_args.mat', 'job_args');
%%
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dt\predictor01.mat');
predictor.tree_dir = 'C:/isbe/asymmetry_project/data/models/synthetic_lines/detection/rf_classification/dt/01_trees/';
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dt\predictor01.mat', 'predictor');
%
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\g2\predictor01.mat');
predictor.tree_dir = 'C:/isbe/asymmetry_project/data/models/synthetic_lines/detection/rf_classification/g2/01_trees/';
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\g2\predictor01.mat', 'predictor');
%
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\dt\predictor01.mat');
predictor.tree_dir = 'C:/isbe/asymmetry_project/data/models/synthetic_lines/orientation/rf_regression/dt/01_trees/';
save('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\dt\predictor01.mat', 'predictor');

%%
im = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images\image' zerostr(1, 4) '.mat']);
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\pc20120813T190828\predictor01.mat');
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\orientation\rf_regression\pc20120813T190828\job_args.mat');

[orientation_map] = classify_image(...
    'image_in', im,...
    'decomposition_args', job_args.decomposition_args,...
    'predictor', predictor, ...
    'prediction_type', job_args.predictor_args.prediction_type,...
    'output_type', job_args.sampling_args.output_type,...
    'use_probs', 0,...
    'mask', [],...
    'num_trees', [], ...
    'max_size', 128,...
    'incremental_results', 0);
%%
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\pc20120813T173634\predictor01.mat');
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\pc20120813T173634\job_args.mat');

[line_map] = classify_image(...
    'image_in', im,...
    'decomposition_args', job_args.decomposition_args,...
    'predictor', predictor, ...
    'prediction_type', job_args.predictor_args.prediction_type,...
    'output_type', job_args.sampling_args.output_type,...
    'use_probs', 0,...
    'mask', [],...
    'num_trees', [], ...
    'max_size', 128,...
    'incremental_results', 0);
%%
predictor = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\pc20120814T114509\predictor01.mat');
job_args = u_load('C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\pc20120814T114509\job_args.mat');

[line_map_g2] = classify_image(...
    'image_in', im,...
    'decomposition_args', job_args.decomposition_args,...
    'predictor', predictor, ...
    'prediction_type', job_args.predictor_args.prediction_type,...
    'output_type', job_args.sampling_args.output_type,...
    'use_probs', 0,...
    'mask', [],...
    'num_trees', [], ...
    'max_size', 128,...
    'incremental_results', 0);
%%
predict_image_set(...
    'model_name',       'predictor01',...
    'model_id',         'dt\',...
    'image_dir',        'synthetic_lines\edge64\test\images\', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\',...
    'task_id',			1, ...
    'num_jobs',			1, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
predict_image_set(...
    'model_name',       'predictor01',...
    'model_id',         'g2\',...
    'image_dir',        'synthetic_lines\edge64\test\images\', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\',...
    'task_id',			1, ...
    'num_jobs',			1, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
predict_image_set(...
    'model_name',       'predictor01',...
    'model_id',         'g2\',...
    'image_dir',        'synthetic_lines\edge64\training\images\', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\',...
    'task_id',			1, ...
    'num_jobs',			2, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
predict_image_set(...
    'model_name',       'predictor01',...
    'model_path',       'synthetic_lines\orientation\rf_regression\dt\',...
    'image_dir',        'synthetic_lines\edge64\test\images\', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\',...
    'task_id',			1, ...
    'num_jobs',			1, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
for ii = 1:3
    
    build_predictor(...
        'task_id',				ii, ...
        'job_id',				'bob', ...
        ... % Folders
        'image_root',           [asymmetryroot,'data/synthetic_lines/edge64/training/'],...
        'model_root',           [asymmetryroot,'data/models/synthetic_lines/'], ...
        ... % Output parameters
        'output_type',          'detection', ...
            'presence_dir',         [],...
            'class_dir',            [],...
            'ori_dir',              'orientations',...
            'width_dir',            [], ...
            'bg_ratio',				1, ...
        ... % Sampling parameters
        'num_samples',			1000, ...
        'max_n_images',         5,...
        'sampling_method',      'generate_training_data', ...
        'image_type', 			unixenv('IMAGE_TYPE','real'), ...
            ... % Image synthesis parameters
            'image_dir',            'images',...
            'fov_mask_dir',         [],...
            'fg_mask_dir',          'labels',...
            'bg_prob_dir',          [],...
            'normalise', 			0, ...
            ... % Saved training data parameters
            'save_training_data',	false, ...
            'training_data_dir', 	[], ...
            'training_data',		[], ... % ???
        ... % Image feature/decomposition parameters
        'num_levels', 			4, ...
        'win_size',				1, ...
        'pca_filename',         [], ...
        'do_max',				false, ...
        'rotate',				false, ...
        'decomp_type', 			'dt', ...
            ... % DTCWT parameters
            'feature_shape', 		'rect', ...
            'feature_type',			'conj', ...
            ... % Gaussian derivative parameters
            'sigma_range', 			[1,2,4,8], ...
        ... % Predictor parameters
        'prediction_type',		'rf_classification', ...
            ... % Tree/Forest parameters
            'n_trees',				2 ...
    );
end
%%
combine_hydra_rfs(...
    'jim', ...
    'model_root', [asymmetryroot,'data/models/synthetic_lines/detection/rf_classification']);
%%
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps
for ii = 1:500
    line_prob = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images\results\image' zerostr(ii, 4) '_pred.mat']);
    line_map = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\labels\image' zerostr(ii, 4) '_label.mat']);
    
    line_map_r = 1 - line_prob + 0.5;
    line_map_r(~line_map) = 0;
    
    bg_map = line_prob + 0.5;
    bg_map(line_map) = 0;
    
    line_map_r(:,:,2) = bg_map;
    
%     figure; 
%     subplot(1,2,1); imgray(line_map_r(:,:,1));
%     subplot(1,2,2); imgray(line_map_r(:,:,2));
    
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps\image' zerostr(ii,4) '_rmap.mat'], 'line_map_r');
end
%%
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps\dt_w1
mkdir C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps\g2_w1
for ii = 1:500
    line_prob = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images\results\g2_w1\image' zerostr(ii, 4) '_pred.mat']);
    line_map = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\labels\image' zerostr(ii, 4) '_label.mat']);
    
    line_map_r = 1 - line_prob + 0.5;
    line_map_r(~line_map) = 0;
    
    bg_map = line_prob + 0.5;
    bg_map(line_map) = 0;
    
    line_map_r(:,:,2) = bg_map;
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps\g2_w1\image' zerostr(ii,4) '_rmap.mat'], 'line_map_r');
    %
    line_prob = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\images\results\dt_w1\image' zerostr(ii, 4) '_pred.mat']);
    line_map = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\labels\image' zerostr(ii, 4) '_label.mat']);
    
    line_map_r = 1 - line_prob + 0.5;
    line_map_r(~line_map) = 0;
    
    bg_map = line_prob + 0.5;
    bg_map(line_map) = 0;
    
    line_map_r(:,:,2) = bg_map;
    save(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\training\resampling_maps\dt_w1\image' zerostr(ii,4) '_rmap.mat'], 'line_map_r');
    
    
end
%%
build_predictor(...
        'task_id',				1, ...
        'job_id',				'dtr', ...
        ... % Folders
        'image_root',           [asymmetryroot,'data/synthetic_lines/edge64/training/'],...
        'model_root',           [asymmetryroot,'data/models/synthetic_lines/'], ...
        ... % Output parameters
        'output_type',          'detection', ...
            'presence_dir',         [],...
            'class_dir',            [],...
            'ori_dir',              'orientations',...
            'width_dir',            [], ...
            'bg_ratio',				2, ...
        ... % Sampling parameters
        'num_samples',			100000, ...
        'max_n_images',         500,...
        'sampling_method',      'generate_training_data', ...
        'image_type', 			unixenv('IMAGE_TYPE','real'), ...
            ... % Image synthesis parameters
            'image_dir',            'images',...
            'fov_mask_dir',         [],...
            'fg_mask_dir',          'labels',...
            'probability_dir',      ['resampling_maps/' decomp{ii}],...
        ... % Image feature/decomposition parameters
        'num_levels', 			4, ...
        'win_size',				1, ...
        'pca_filename',         [], ...
        'do_max',				false, ...
        'rotate',				false, ...
        'decomp_type', 			'dt', ...
            ... % DTCWT parameters
            'feature_shape', 		'rect', ...
            'feature_type',			'conj', ...
            ... % Gaussian derivative parameters
        ... % Predictor parameters
        'prediction_type',		'rf_classification', ...
            ... % Tree/Forest parameters
            'n_trees',				10, ...
        'overwrite',    1,...
        'quiet', 1 ...
    );
%%
decomp = {'dt_w1', 'g2'};
decomp2 = {'dt', 'g2d'};
for ii = 1:1
    build_predictor(...
        'task_id',				1, ...
        'job_id',				[decomp{ii} 'r'], ...
        ... % Folders
        'image_root',           [asymmetryroot,'data/synthetic_lines/edge64/training/'],...
        'model_root',           [asymmetryroot,'data/models/synthetic_lines/'], ...
        ... % Output parameters
        'output_type',          'detection', ...
        ... % Sampling parameters
        'num_samples',			100000, ...
        'max_n_images',         5,...
        'sampling_method',      'generate_training_data', ...
        'image_type', 			unixenv('IMAGE_TYPE','real'), ...
            ... % Image synthesis parameters
            'image_dir',            'images',...
            'fov_mask_dir',         [],...
            'fg_mask_dir',          'labels',...
            'probability_dir',      ['resampling_maps/' decomp{ii}],...
            'class_dir',            [],...
            'ori_dir',              'orientations',...
            'width_dir',            [], ...
            'bg_ratio',				2, ...
        ... % Image feature/decomposition parameters
        'num_levels', 			4, ...
        'win_size',				1, ...
        'pca_filename',         [], ...
        'do_max',				false, ...
        'rotate',				false, ...
        'decomp_type', 			decomp2{ii}, ...
            ... % DTCWT parameters
            'feature_shape', 		'rect', ...
            'feature_type',			'conj', ...
        ... % Gaussian derivative parameters
            'sigma_range', 			[1,2,4,8], ...
        ... % Predictor parameters
        'prediction_type',		'rf_classification', ...
            ... % Tree/Forest parameters
            'n_trees',				2, ...
        'quiet', 1, ...
        'overwrite', 1 ...
    );
end
%%
for ii = 1:20
    test_im = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\image' zerostr(ii,4) '.mat']);
    pred_dt1 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_w1\image' zerostr(ii,4) '_pred.mat']);
    pred_dt3 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_w3\image' zerostr(ii,4) '_pred.mat']);
    pred_g21 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\g2_w1\image' zerostr(ii,4) '_pred.mat']);
    pred_g23 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\g2_w3\image' zerostr(ii,4) '_pred.mat']);
    figure;
    subplot(2,3,[1 4]); imgray(test_im); title('Test image');
    subplot(2,3,2); imgray(pred_dt1); title('DT 1x1 original'); caxis([0 1]);
    subplot(2,3,3); imgray(pred_dt3); title('DT 3x3 original'); caxis([0 1]);
    subplot(2,3,5); imgray(pred_g21); title('G" 1x1 original'); caxis([0 1]);
    subplot(2,3,6); imgray(pred_g23); title('G" 3x3 original'); caxis([0 1]);
    %colormap(jet(256));
    exportfig([exp_dir 'predictions ' zerostr(ii,3) '.png']);
end
%%
for ii = 1:20
    test_im = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\image' zerostr(ii,4) '.mat']);
    pred_dt1 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_w1\image' zerostr(ii,4) '_pred.mat']);
    pred_dt3 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_w3\image' zerostr(ii,4) '_pred.mat']);
    pred_dtp = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_p\image' zerostr(ii,4) '_pred.mat']);
    pred_dtm = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_m\image' zerostr(ii,4) '_pred.mat']);
    figure;
    subplot(2,3,[1 4]); imgray(test_im); title('Test image');
    subplot(2,3,2); imgray(pred_dt1); title('DT 1x1 original'); caxis([0 1]);
    subplot(2,3,3); imgray(pred_dt3); title('DT 3x3 original'); caxis([0 1]);
    subplot(2,3,5); imgray(pred_dtp); title('DT 1x1 phase'); caxis([0 1]);
    subplot(2,3,6); imgray(pred_dtm); title('DT 1x1 mag'); caxis([0 1]);
    %colormap(jet(256));
    exportfig([exp_dir 'predictions ' zerostr(ii,3) '_mp.png']);
end
%%
for ii = 21:40
    test_im = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\image' zerostr(ii,4) '.mat']);
    pred_dt1 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\dt_w3\image' zerostr(ii,4) '_pred.mat']);
    pred_g121 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\g12_w1\image' zerostr(ii,4) '_pred.mat']);
    pred_g123 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\g12_w3\image' zerostr(ii,4) '_pred.mat']);
    pred_g23 = u_load(['C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\g2_w3\image' zerostr(ii,4) '_pred.mat']);
    figure;
    subplot(2,3,[1 4]); imgray(test_im); title('Test image');
    subplot(2,3,2); imgray(pred_dt1); title('DT 3x3 original'); caxis([0 1]);
    subplot(2,3,3); imgray(pred_g121); title('G''+G" 1x1 original'); caxis([0 1]);
    subplot(2,3,5); imgray(pred_g123); title('G''+G" 3x3 original'); caxis([0 1]);
    subplot(2,3,6); imgray(pred_g23); title('G" 3x3 original'); caxis([0 1]);
    colormap(jet(256));
end
%%
prob_dir = 'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\';
label_dir = 'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\labels\';

[roc_pts_dt1, auc_dt1] = compute_roc_image_set([prob_dir 'dt_w1\'], label_dir, 0);
[roc_pts_g21, auc_g21] = compute_roc_image_set([prob_dir 'g2_w1\'], label_dir, 0);
[roc_pts_dt3, auc_dt3] = compute_roc_image_set([prob_dir 'dt_w3\'], label_dir, 0);
[roc_pts_g23, auc_g23] = compute_roc_image_set([prob_dir 'g2_w3\'], label_dir, 0);


figure; axis equal; axis([0 1 0 1]); hold all;
plot(roc_pts_dt1(:,1), roc_pts_dt1(:,2), '-x'); 
plot(roc_pts_g21(:,1), roc_pts_g21(:,2), '-x'); 
plot(roc_pts_dt3(:,1), roc_pts_dt3(:,2), '-x'); 
plot(roc_pts_g23(:,1), roc_pts_g23(:,2), '-x');
legend({...
    ['DT 1x1 original (' num2str(auc_dt1) ')'], ...
    ['G" 1x1 original (' num2str(auc_g21) ')'], ...
    ['DT 3x3 original (' num2str(auc_dt3) ')'], ...
    ['G" 3x3 original (' num2str(auc_g23) ')']});
%%
exp_dir = 'C:\isbe\asymmetry_project\experiments\synthetic_lines\lines_on_edges_exp\';
mkdir(exp_dir); 

prob_dir = 'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\images\results\centre_detection\';
label_dir = 'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\labels\';

[roc_pts_dt1, auc_dt1] = compute_roc_image_set([prob_dir 'dt_w1\'], label_dir, 1);
[roc_pts_g21, auc_g21] = compute_roc_image_set([prob_dir 'g2_w1\'], label_dir, 1);
[roc_pts_dt3, auc_dt3] = compute_roc_image_set([prob_dir 'dt_w3\'], label_dir, 1);
[roc_pts_g23, auc_g23] = compute_roc_image_set([prob_dir 'g2_w3\'], label_dir, 1);
[roc_pts_g121, auc_g121] = compute_roc_image_set([prob_dir 'g12_w1\'], label_dir, 1);
[roc_pts_g123, auc_g123] = compute_roc_image_set([prob_dir 'g12_w3\'], label_dir, 1);


figure; axis equal; axis([0 1 0 1]); hold all;
plot(roc_pts_dt1(:,1), roc_pts_dt1(:,2), '-x'); 
plot(roc_pts_g21(:,1), roc_pts_g21(:,2), '-x'); 
plot(roc_pts_dt3(:,1), roc_pts_dt3(:,2), '-x'); 
plot(roc_pts_g23(:,1), roc_pts_g23(:,2), '-x');
plot(roc_pts_g121(:,1), roc_pts_g121(:,2), '-x');
plot(roc_pts_g123(:,1), roc_pts_g123(:,2), '-x');
legend({...
    ['DT 1x1 original (' num2str(auc_dt1) ')'], ...
    ['G" 1x1 original (' num2str(auc_g21) ')'], ...
    ['DT 3x3 original (' num2str(auc_dt3) ')'], ...
    ['G" 3x3 original (' num2str(auc_g23) ')'],...
    ['G'' + G" 1x1 original (' num2str(auc_g121) ')'], ...
    ['G'' + G" 3x3 original (' num2str(auc_g123) ')']});
axis([0 0.2 0.8 1]);

exportfig([exp_dir 'detection_rocs.pdf']);
%%
counts = zeros(1,48);
for ii = 1:100
    load(['C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dt\01_trees\rf_tree' zerostr(ii,4) '.mat']);
    c = hist(tree.var(tree.var > 0), 1:48);
    counts = counts + c;
end
figure; bar(1:48, counts);
%%
counts = zeros(1,48);
for ii = 1:13
    load(['C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\dtr\01_trees\rf_tree' zerostr(ii,4) '.mat']);
    c = hist(tree.var(tree.var > 0), 1:48);
    counts = counts + c;
end
figure; bar(1:48, counts);
%%
build_predictor(...
        'task_id',				1, ...
        'job_id',				'dt3', ...
        ... % Folders
        'image_root',           [asymmetryroot,'data/synthetic_lines/line_edge64/training/'],...
        'model_root',           [asymmetryroot,'data/models/synthetic_lines/'], ...
        ... % Output parameters
        'output_type',          'detection', ...
            'presence_dir',         [],...
            'class_dir',            [],...
            'ori_dir',              'orientations',...
            'width_dir',            [], ...
            'bg_ratio',				2, ...
        ... % Sampling parameters
        'num_samples',			10000, ...
        'max_n_images',         500,...
        'sampling_method',      'generate_training_data', ...
        'image_type', 			unixenv('IMAGE_TYPE','real'), ...
            ... % Image synthesis parameters
            'image_dir',            'images',...
            'fov_mask_dir',         [],...
            'fg_mask_dir',          'labels',...
            'probability_dir',      'sampling_masks',...
        ... % Image feature/decomposition parameters
        'num_levels', 			4, ...
        'win_size',				1, ...
        'pca_filename',         [], ...
        'do_max',				false, ...
        'rotate',				false, ...
        'decomp_type', 			'dt', ...
            ... % DTCWT parameters
            'feature_shape', 		'rect', ...
            'feature_type',			'conj', ...
            ... % Gaussian derivative parameters
        ... % Predictor parameters
        'prediction_type',		'rf_classification', ...
            ... % Tree/Forest parameters
            'n_trees',				1, ...
        'quiet', 1, ...
        'overwrite', 1 ...
    );
%%
predict_image_set(...
    'model_name',       'predictor01',...
    'model_id',         'dt3\',...
    'image_dir',        'images', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\synthetic_lines\detection\rf_classification\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test',...
    'task_id',			1, ...
    'num_jobs',			100, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
edge_width = sample_uniform([1 8]);
line_width = sample_uniform([1 8]);
edge_contrast = sample_uniform([4 8]);
line_contrast = sample_uniform([4 8]);
line_ori = sample_uniform([0 180]);
edge_ori = sample_from_normal(line_ori + 90, 30^2, 1);

[line, label, ~, orientation_map] =...
    create_ellipse_bar(line_width/2, line_contrast, line_ori, 64, 64, 32, 32);

width_map = label * line_width;

edge = create_sin_step(edge_width/2, edge_contrast, edge_ori, 64, 64, 32, 32);

signal = 1 + line + edge;
%%
snr = linspace(0,2,12);
figure;
for ii = 1:12
    test_image = ricernd(signal, snr(ii));
    subplot(3,4,ii); imgray(test_image); title(['SNR = ' num2str(snr(ii),2)]);
end
%
sigma = linspace(0,2,12);
figure;
for ii = 1:12
    test_image = signal + reshape(sample_from_normal(0, sigma(ii)^2, 64*64), 64, 64);
    subplot(3,4,ii); imgray(test_image); title(['Sigma = ' num2str(sigma(ii),2)]);
end