predict_image_set(...
    'model_name',       'predictor01',...
    'model_id',         'pc20120830T122109\',...
    'image_dir',        'images\', ...
    'model_root',       'C:\isbe\asymmetry_project\data\models\vessel\detection\rf_classification\', ...
    'image_root',       'C:\isbe\asymmetry_project\data\synthetic_lines\edge64\test\',...
    'task_id',			1, ...
    'num_jobs',			100, ...
    'mask_dir',			unixenv('MASK_DIR',[]), ...
    'max_size',			unixenv('MAX_SIZE',128), ...
    'num_trees',		unixenv('NUM_TREES_C',[]), ...
    'use_probs',		unixenv('USE_PROBS',0), ...
    'view',				unixenv('VIEW',[]), ...
    'resize',			unixenv('RESIZE',[]), ...
    'flip',				unixenv('FLIP',0),...
    'save_type',        unixenv('SAVE_TYPE','normal'));
%%
model_dir = 'C:\isbe\asymmetry_project\data\models\vessel\detection\rf_classification\pc20120830T122109\sampled_data\';
image_lists = u_load([model_dir 'image_lists.mat']);
l = dir([model_dir 'sampled_pts*']);
[sampled_pts_list{1:length(l),1}] = l.name;
sampled_pts_list = strcat(model_dir, sampled_pts_list);
[image_list{1:length(image_lists),1}] = image_lists.image;

make_sampled_maps(image_list, sampled_pts_list, model_dir, 0);
%%
NUM_TREES=10 OUTPUT_TYPE="detection" NUM_SAMPLES=50000 MAX_N_IMAGES=500 BG_RATIO=2 IMAGE_ROOT="synthetic_lines/edge64/training" MODEL_ROOT="models/synthetic_lines" FG_MASK_DIR="labels" PREDICTION_TYPE="rf_classification" DECOMP_TYPE="dt" FEATURE_TYPE="phase" WIN_SIZE=1 FOV_MASK_DIR="fov_masks" qsub -V -l twoday -t 1-10 matlab_code/trunk/hydra/cuc/build_predictor.sh
NUM_TREES=10 OUTPUT_TYPE="detection" NUM_SAMPLES=50000 MAX_N_IMAGES=500 BG_RATIO=2 IMAGE_ROOT="synthetic_lines/edge64/training" MODEL_ROOT="models/synthetic_lines" FG_MASK_DIR="labels" PREDICTION_TYPE="rf_classification" DECOMP_TYPE="dt" FEATURE_TYPE="mag" WIN_SIZE=1 FOV_MASK_DIR="fov_masks" qsub -V -l twoday -t 1-10 matlab_code/trunk/hydra/cuc/build_predictor.sh
MODEL_ROOT="models/synthetic_lines/detection/rf_classification" MODEL_PATH="'7530'" qsub -V -l short matlab_code/trunk/hydra/cuc/combine_hydra_rfs.sh
MODEL_ROOT="models/synthetic_lines/detection/rf_classification" MODEL_PATH="'7531'" qsub -V -l short matlab_code/trunk/hydra/cuc/combine_hydra_rfs.sh
MODEL_ROOT="models/synthetic_lines/detection/rf_classification" MODEL_PATH="'7530'" NUM_JOBS=10 IMAGE_ROOT="synthetic_lines/edge64/test" qsub -V -t 1-10 -l twoday matlab_code/trunk/hydra/cuc/predict_image_set.sh
MODEL_ROOT="models/synthetic_lines/detection/rf_classification" MODEL_PATH="'7531'" NUM_JOBS=10 IMAGE_ROOT="synthetic_lines/edge64/test" qsub -V -t 1-10 -l twoday matlab_code/trunk/hydra/cuc/predict_image_set.sh
%%
for ii = 1:5
    build_predictor(... % the user's input
    'task_id',				ii, ...
    'job_id',				'1000', ...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
	'output_type',          'orientation', ...
	'num_samples',			1000, ...
    ... % Image sampling parameters
        'image_dir',            'images',...
        'fov_mask_dir',         'fov_masks',...
        'fg_mask_dir',          'vessel_masks',...
    'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'overwrite',			1);
end
%%
args.model_root = [asymmetryroot,'data/models/vessel/orientation/rf_regression'];
args.make_sampled_maps = 1;
combine_hydra_rfs('1000', args);
%%
combine_rfs(...
    'rf_dir', 'C:\isbe\asymmetry_project\data/models/vessel/detection/rf_classification/1000/',...
    'rf_name', 'predictor',...
    'tree_dir', '1000/trees/',...
    'tree_root', 'C:\isbe\asymmetry_project\data/models/vessel/detection/rf_classification/',...
    'copy_trees', 1,...% the optional arguments
    'delete_trees', 1,...
    'sampled_maps_dir', '1000/sampled_maps/', ...
    'save_path', 'C:\isbe\asymmetry_project\data/models/vessel/detection/rf_classification/1000/predictor.mat');
%%
for ii = 2:10
    predict_image_set(...
        'model_id', '1000',...
        'model_root',		'C:\isbe\asymmetry_project\data/models/vessel/orientation/rf_regression/', ...
        'image_root',       [asymmetryroot,'data/retinograms/DRIVE/training'],...
        'task_id',			ii, ...
        'num_jobs',			10, ...
        'mask_dir',			'fov_masks', ...
        'use_sampled_maps', 1);
end
%%
build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'1001', ...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
	'output_type',          'orientation', ...
	'num_samples',			1000, ...
    ... % Image sampling parameters
        'image_dir',            'images',...
        'fov_mask_dir',         'fov_masks',...
        'fg_mask_dir',          'vessel_masks',...
        'probability_dir',      '1000',...
        'make_resampling_maps', 0.5,...
    'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'overwrite',			1);
%%
build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'1001', ...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
	'output_type',          'orientation', ...
	'num_samples',			1000, ...
    ... % Image sampling parameters
        'image_dir',            'images',...
        'fov_mask_dir',         'fov_masks',...
        'fg_mask_dir',          'vessel_masks',...
        'probability_dir',      'resampling_maps\orientation\rf_regression\1000\0.5',...
        'make_resampling_maps', 0,...
    'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'overwrite',			1);
%%
make_sampling_maps_set(... % non-strict mode
    'model_id',         '1000',...
    'lambda',           0.5, ...
    'output_type',      'orientation', ...
	'prediction_type',	'rf_regression', ...
    'fg_mask_dir',      'vessel_masks',...
    'prediction_dir',   'predictions',...
    'probability_dir',  'resampling_maps',...    
    'image_root',       [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'fov_mask_dir',		'fov_masks',...
    'ori_dir',          'orientations',...
    'width_dir',        'width_maps');
%%
pred_dir = 'C:\isbe\asymmetry_project\data\retinograms\DRIVE_clean\training\predictions\detection\rf_classification\';
label_dir = 'C:\isbe\asymmetry_project\data\retinograms\DRIVE_clean\training\vessel_masks\';

[roc_pts, auc_g2_w1] = compute_roc_image_set([pred_dir '8892\'], label_dir, 0);
[roc_pts, auc_g2_w3] = compute_roc_image_set([pred_dir '8893\'], label_dir, 0);
[roc_pts, auc_dt_w1] = compute_roc_image_set([pred_dir '8894\'], label_dir, 0);
[roc_pts, auc_dt_w3] = compute_roc_image_set([pred_dir '8895\'], label_dir, 0);
%%
 build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'g2da', ...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
	'output_type',          'orientation', ...
	'num_samples',			1000, ...
    ... % Image sampling parameters
        'image_dir',            'images',...
        'fov_mask_dir',         'fov_masks',...
        'fg_mask_dir',          'vessel_masks',...
    'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'decomp_type',          'g2da',...
        'num_angles',           6,...
        'sigma_range',          [1 2 4 8 16],...
    'overwrite',			1);
%%
clc
build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'g2dg', ...
    'image_type',            'line',...
    'noise_type',           'rician',...
    'noise_params',          1,...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
	'output_type',          'orientation', ...
	'num_samples',			1000, ...
    ... % Image sampling parameters
        'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'decomp_type',          'gaborg',...
        'win_size',          3,...
        'num_levels',        2,...
    'overwrite',			1);
%%

responses = zeros(16,180,5);
ori_errors = zeros(16,180,5);
d = 64;
for width = 1:16
    for ori = 1:1:180
        gt_ori = complex(cosd(2*ori), sind(2*ori));
        im = create_gauss_bar(width/2, 1, ori, d,d,d/2,d/2);
        for sigma = 2%1:5
            [res_map ori_map] = gaussian_2nd_derivative_line(im, 2^(sigma-1));
            pred_ori = complex(cos(2*ori_map(d/2,d/2)), sin(2*ori_map(d/2,d/2)));
            
            responses(width, ori, sigma) = res_map(d/2,d/2);
            ori_errors(width, ori, sigma) = ori_error(gt_ori, pred_ori);
        end
    end
end
%%
for width = 1:16
    figure; hold all; title(['G" responses for line of width ' num2str(width)]);
    plot(squeeze(responses(width,:,:)));
    legend({'\sigma = 1', '\sigma = 2', '\sigma = 4', '\sigma = 8', '\sigma = 16'});
end
%%
for width = 1:16
    figure; hold all; title(['G" ori errors for line of width ' num2str(width)]);
    plot(squeeze(180*abs(ori_errors(width,:,:))/pi));
    axis([1 180 0 5]);
    legend({'\sigma = 1', '\sigma = 2', '\sigma = 4', '\sigma = 8', '\sigma = 16'});
end
%%
figure; plot(abs(squeeze(mean(responses,2))));
title('Mean response over all orientations for varying line width');
xlabel('Line width (pixels)');
legend({'\sigma = 1', '\sigma = 2', '\sigma = 4', '\sigma = 8', '\sigma = 16'});
%%
DECOMP_TYPE="g2d" WIN_SIZE=3 OUTPUT_TYPE="detection" PREDICTION_TYPE="rf_classification" NUM_TREES=2 IMAGE_TYPE="real" IMAGE_ROOT="fibre/training" FG_MASK_DIR="fibre_masks" NUM_SAMPLES=1000 MODEL_ROOT="models/fibre" qsub -V -l twoday -t 1 matlab_code/trunk/hydra/cuc/build_predictor.sh
MODEL_ROOT="models/fibre/detection/rf_classification" MODEL_PATH="'11924'" qsub -V -hold_jid 11924 -l short matlab_code/trunk/hydra/cuc/combine_hydra_rfs.sh
MODEL_ROOT="models/fibre/detection/rf_classification" MODEL_PATH="'11924'" NUM_JOBS=10 IMAGE_ROOT="fibre/test" USE_SAMPLED_MAPS=0 qsub -V -hold_jid 12237 -t 1-10 -l twoday matlab_code/trunk/hydra/cuc/predict_image_set.sh
%%

%All the old valid types before we swapped to the new cellstr format
for decomp_type = {'pixel',... % dumbest
          'linop', ... % template matching
          'g1d', 'g2d', 'g2di', 'g2da', 'haar', 'g2dg', ... % derivs
          'dt', 'mono', 'g12d', 'g2dh', 'gabor', 'gaborg',... % with phase
          'dtg2' % suggested by dumb reviewer
         }

    build_predictor(... % the user's input
        'task_id',				1, ...
        'job_id',				'g2dg', ...
        'image_type',            'line',...
        'noise_type',           'rician',...
        'noise_params',          1,...
        'model_root',           [asymmetryroot,'data/models/vessel'], ...
        'output_type',          'orientation', ...
        'num_samples',			1000, ...
        ... % Image sampling parameters
            'prediction_type',          'rf_regression', ...
            ... % Tree/Forest parameters
            'n_trees',				2, ...
            'quiet',                1, ...
        'decomp_type',          decomp_type,...
            'win_size', 3,...
        'overwrite',			1);
end
%%
build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'dave', ...
    'image_type',            'real',...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE_clean/training'],...
    'noise_params',          1,...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
    'output_type',          'orientation', ...
    'num_samples',			1000, ...
    ... % Image sampling parameters
        'prediction_type',          'rf_regression', ...
        'make_resampling_maps', 0.75,...
        'probability_dir', '12242/',...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'decomp_type',          'g2d',...
        'win_size',         3,...
    'overwrite',			1);
%%
build_predictor(... % the user's input
    'task_id',				1, ...
    'job_id',				'dave', ...
    'image_type',            'real',...
    'image_root',           [asymmetryroot,'data/retinograms/DRIVE/training'],...
    'noise_params',          1,...
    'model_root',           [asymmetryroot,'data/models/vessel'], ...
    'output_type',          'orientation', ...
    'num_samples',			1000, ...
    ... % Image sampling parameters
        'prediction_type',          'rf_regression', ...
        ... % Tree/Forest parameters
        'n_trees',				2, ...
        'quiet',                1, ...
    'decomp_type',          'g2da',...
        'do_max', 0,...
        'rotate', 1,...
        'win_size',         3,...
    'overwrite',			1);
    