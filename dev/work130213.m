for ii = 1:10
    im = imread(['C:\isbe\nailfold\data\training\patches\apex' zerostr(ii,4) '.png']);
    im = imfilter(im, fspecial('gaussian', [7 7], 1), 'replicate');
    
    apex = load(['C:\isbe\nailfold\data\training\patch_apexes\apex' zerostr(ii,4) '.mat']);
    figure; imgray(im);
    plot(apex.v_pts(:,1), apex.v_pts(:,2));
    plot(apex.v_pts(16,1), apex.v_pts(16,2), 'rx');
    
    figure;
    
    for i_p = 1:12
        
        centre_c = round( 30*rand + apex.v_pts(16,1) - 15);
        centre_r = round( 30*rand + apex.v_pts(16,2) - 15);

        patch = sample_window(im, 41, centre_r, centre_c);
        
        patch = imresize(patch, 1/1.5, 'bilinear');
        
        subplot(3,4,i_p); imgray(patch);
    end
end
%%
int_vec = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27178 0.551714 0.841894 1.13164 1.42015 1.70754 1.99931 2.28732 ...
    2.59582 2.90356 3.21061 3.51702 3.82282 4.12805 4.43631 4.7412 5.04493 5.34826 5.6512 5.95839 6.26953 6.59584 6.92252 7.24181 ...
    7.56574 7.90185 8.22991 0 0.548313 1.1003 1.6733 2.24874 2.82184 3.39276 3.96969 4.55076 5.14441 5.73232 6.34341 6.95331 7.56209 ...
    8.16983 8.78014 9.38667 9.99166 10.5959 11.1994 11.8083 12.4344 13.0643 13.7158 14.3539 14.9911 15.6528 16.2828 0 0.833901 1.67018 ...
    2.52625 3.39037 4.24438 5.10963 5.99023 6.87427 7.74926 8.63008 9.54248 10.4478 11.3368 12.2427 13.1419 14.0478 14.9481 15.8382 ...
    16.7185 17.6225 18.5468 19.4749 20.4289 21.368 22.3077 23.2749 24.2049 0 1.11573 2.23264 3.36823 4.51595 5.67218 6.83892 8.02014 ...
    9.20444 10.376 11.5561 12.7627 13.946 15.1108 16.2893 17.4607 18.6385 19.8105 20.9722 22.1243 23.321 24.5408 25.7655 27.0161 ...
    28.2521 29.4892 30.7541 31.9826 0 1.39407 2.78822 4.20042 5.63343 7.07594 8.52163 9.97878 11.4397 12.9086 14.3858 15.8658 17.3199 ...
    18.78 20.2288 21.6703 23.1181 24.5599 25.9799 27.4015 28.8677 30.357 31.8564 33.3997 34.9313 36.4643 38.0257 39.5514 0 1.66919 ...
    3.33744 5.02329 6.74289 8.46354 10.1802 11.9078 13.6386 15.3971 17.1694 18.933 20.6721 22.4017 24.119 25.8288 27.5449 29.2606 ...
    30.9514 32.6411 34.3753 36.1327 37.9061 39.722 41.5482 43.3762 45.2229 47.0192 0 1.94134 3.88085 5.83712 7.84503 9.85026 11.8605 ...
    13.8821 15.8818 17.9201 19.9858 22.0429 24.0742 26.0908 28.0749 30.0516 32.0345 34.0171 35.9748 37.9313 39.9338 41.9691 44.0188 ...
    46.1284 48.2486 50.3708 52.5087 54.5893 0 2.21078 4.41893 6.64315 8.91838 11.1904 13.4671 15.7587 18.0241 20.3545 22.7123 25.0613 ...
    27.3695 29.6548 31.9045 34.1468 36.3954 38.6438 40.8674 43.1065 45.3894 47.7176 50.0544 52.4573 54.871 57.2989 59.7312 62.0879 0 2.45327 ...
    4.92772 7.41763 9.94718 12.4672 15.0083 17.5641 20.1113 22.7325 25.3812 28.0213 30.6181 33.1813 35.6959 38.2183 40.7318 43.2696 45.7678 ...
    48.2918 50.8478 53.4602 56.0661 58.7612 61.4683 64.1698 66.8819 69.521 0 2.71104 5.44967 8.2033 10.9957 13.7787 16.5826 19.4012 22.2321 ...
    25.1431 28.0638 30.9725 33.8361 36.6631 39.4463 42.2581 45.0361 47.8385 50.6053 53.3944 56.2159 59.0939 61.9658 64.937 67.9378 70.914 ...
    73.8965 76.8307 0 2.97384 5.97481 8.99042 12.0445 15.0891 18.1544 21.2598 24.3522 27.5268 30.7203 33.8913 37.0175 40.1076 43.1561 ...
    46.2318 49.2739 52.3409 55.3727 58.4271 61.5142 64.658 67.796 71.0341 74.3019 77.5505 80.8275 84.0469 0 3.23493 6.49663 9.77272 13.0872 ...
    16.392 19.7177 23.103 26.4785 29.914 33.3689 36.8032 40.1918 43.5446 46.8564 50.1959 53.5024 56.8342 60.1312 63.4512 66.8043 70.2145 ...
    73.6192 77.1244 80.6596 84.1798 87.7423 91.2308 0 3.49452 7.01559 10.5509 14.1246 17.6937 21.3001 24.9694 28.6077 32.3037 36.0196 ...
    39.7176 43.3692 46.9921 50.5673 54.1709 57.7422 61.3393 64.9022 68.4651 72.085 75.7624 79.4347 83.2079 87.0144 90.8221 94.6811 ...
    98.4481 0 3.75288 7.53219 11.3258 15.1578 18.9877 22.8746 26.8033 30.7132 34.6714 38.6483 42.6079 46.5267 50.4202 54.2616 58.13 ...
    61.9667 65.8272 69.6567 73.46 77.3462 81.292 85.2331 89.2754 93.3516 97.4293 101.559 105.606 0 4.01021 8.04688 12.098 16.1948 ...
    20.2881 24.4336 28.6213 32.791 37.0096 41.2476 45.4692 49.6509 53.8082 57.9251 62.059 66.1622 70.2843 74.3718 78.4427 82.5778 ...
    86.791 90.9737 95.2849 99.6283 103.963 108.365 112.685 0 4.26679 8.54086 12.8489 17.2032 21.5543 25.9576 30.4045 34.8341 39.3135 ...
    43.8132 48.2974 52.7428 57.1648 61.5474 65.9482 70.3192 74.7076 79.0354 83.3518 87.7278 92.1685 96.5943 101.162 105.75 110.329 ...
    114.995 119.571 0 4.52283 9.05321 13.618 18.2296 22.8386 27.4943 32.2007 36.8907 41.6315 46.3936 51.1415 55.8516 60.5375 65.1735 ...
    69.8182 74.429 79.0424 83.6104 88.162 92.7636 97.4193 102.051 106.828 111.632 116.432 121.335 126.159 0 4.75068 9.52464 14.326 19.1932 ...
    24.0405 28.9553 33.9218 38.8729 43.876 48.9017 53.9143 58.8844 63.8173 68.6923 73.569 78.3897 83.19 87.9571 92.7026 97.4884 102.319 ...
    107.139 112.101 117.079 122.048 127.143 132.187 0 4.97829 9.98016 15.0247 20.1486 25.227 30.3979 35.6203 40.8235 46.0881 51.3664 56.6358 ...
    61.8438 67.0149 72.0894 77.1562 82.1247 87.0527 91.9528 96.8173 101.732 106.695 111.64 116.746 121.858 126.981 132.246 137.492 0 5.22696 ...
    10.4569 15.7305 21.0987 26.4089 31.8296 37.2847 42.7244 48.2241 53.7365 59.2212 64.6352 69.9855 75.1912 80.3575 85.4049 90.3742 95.3225 ...
    100.245 105.223 110.26 115.28 120.458 125.651 130.866 136.262 141.674 0 5.45477 10.9131 16.4158 22.0356 27.5888 33.242 38.9307 44.6055 ...
    50.3359 56.0607 61.7393 67.3169 72.7867 78.0475 83.236 88.258 93.2111 98.1127 102.981 107.935 112.957 117.992 123.184 128.386 133.656 ...
    139.137 144.678 0 5.683 11.3703 17.1029 22.9537 28.7512 34.6378 40.5607 46.4645 52.4035 58.3179 64.1588 69.8442 75.3571 80.6035 85.7361 ...
    90.6748 95.5245 100.281 105.024 109.875 114.798 119.751 124.872 130.01 135.26 140.778 146.4 0 5.92735 11.8703 17.8351 23.9179 29.9494 ...
    36.0709 42.2303 48.3418 54.4781 60.5502 66.5021 72.2189 77.6981 82.881 87.8975 92.6926 97.3823 101.951 106.492 111.157 115.905 120.709 ...
    125.686 130.685 135.837 141.33 147.001 0 6.18578 12.3758 18.5725 24.8884 31.1546 37.5126 43.8934 50.1993 56.5166 62.7214 68.7371 74.4376 ...
    79.8468 84.9307 89.8293 94.4791 98.9955 103.378 107.719 112.185 116.736 121.334 126.114 130.922 135.944 141.348 147.013 0 6.44128 ...
    12.8644 19.294 25.8445 32.3469 38.9384 45.5275 52.0144 58.4854 64.784 70.8355 76.4948 81.8 86.767 91.54 96.0453 100.404 104.63 ...
    108.784 113.03 117.377 121.75 126.309 130.898 135.741 141.023 146.642 0 6.70194 13.358 20.022 26.8083 33.5483 40.3724 47.1715 ...
    53.8284 60.4274 66.7838 72.8308 78.4379 83.6464 88.5154 93.1925 97.5871 101.824 105.942 109.964 114.047 118.201 122.373 126.711 ...
    131.094 135.75 140.888 146.438 0 6.95761 13.8478 20.7487 27.7598 34.715 41.7501 48.7364 55.5271 62.206 68.5879 74.6009 80.1216 ...
    85.245 90.0302 94.6371 98.9712 103.139 107.206 111.134 115.109 119.109 123.089 127.224 131.391 135.863 140.86 146.335];

int_im = reshape(int_vec, 28, 28);
orig_im = diff(diff(int_im, 1, 2));

figure; imgray(int_im);
figure; imgray(orig_im);
%%
mkdir C:\isbe\nailfold\data\test\syn_patches\
mkdir C:\isbe\nailfold\data\test\syn_patch_apexes\
sz = 200;
ub_a = 100;
ub_b = 20;
uf_a = 20;
uf_b = 40;
y = sz/2;
x = sz/2;
x1 = y - 10;
x2 = y + 10;
vessel_top = zeros(31,2);
vessel_top(16,:) = [x, y];

for ii = 1:10
    im = ones(sz) * (rand*ub_b + uf_a);
    im(1:y, x1:x2) = im(1:y, x1:x2) + (rand*uf_b + uf_a);
    im = uint8(im);
    
    imwrite(im, ['C:\isbe\nailfold\data\test\syn_patches\apex' zerostr(ii, 4) '.png']);
    
    %Write out a pts file we can read in to VXL
    num_pts = size(vessel_top, 1);
    fid1 = fopen(['C:\isbe\nailfold\data\test\syn_patch_apexes\apex' zerostr(ii, 4) '.pts'], 'wt');
    fprintf(fid1, '%s \n', 'version: 1');
    fprintf(fid1, '%s %d \n', 'n_points:', num_pts);
    fprintf(fid1, '%s \n', '{'); 
    for jj = 1:num_pts
        fprintf(fid1,'%.2f %.2f \n', vessel_top(jj,1), vessel_top(jj,2));
    end
    fprintf(fid1, '%s \n', '}');
    fclose(fid1);

end
%%
int_im = reshape(X, 28, 28)';
orig_im = diff(diff(int_im, 1, 2));

figure; imgray(int_im);
figure; imgray(orig_im);
%%
%model_dir = 'C:\isbe\nailfold\models\vessel\apex_location\trees\';
model_dir = 'C:\isbe\nailfold\models\vessel\apex_classification\trees\';
used_list = dir([model_dir '*used.bfs']);
for i_u = 1:length(used_list);
    movefile([model_dir used_list(i_u).name], [model_dir 'used/' used_list(i_u).name]);
end
tree_list = dir([model_dir '*.bfs']);
for i_t = 1:length(tree_list)
    display([model_dir tree_list(i_t).name]);
end