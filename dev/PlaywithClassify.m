% Play with classifying FTD/H3
% Initially linear  - leave one out for all 22 subjects
% NB CANNOT run quadratic fit - error for undefined
% Expand to try excluding either 1 modality or 1 ROI

basedir = fullfile('D:','Images','Salford_FTD','A_ROI_Analysis');
cd(basedir)
load AllRoivals;
excludelist = {'@' 'Perf' 'tA' 'GM' 'WM' 'FA' 'MD' };
% %excludelist = {
%         'AllTemporal_L_Postyeqminus11.nii' ...
%     'AllTemporal_R_Postyeqminus11.nii' ...
%     'AllTemporal_L_Antyeqminus11.nii' ...
%     'AllTemporal_R_Antyeqminus11.nii' ...
%     'Ant_y47_VMPFC_2x2.nii' ...
%     'Post_y47_VMPFC_2x2.nii' ...
%     'Calcarine_LR.nii' ...
%     'Cerebellum6_LR.nii' ...
%     'Cingulum_cingulate_gyrus_L_mask.nii' ...
%     'Cingulum_cingulate_gyrus_R_mask.nii' ...
%     'Cingulum_hippocampus_L_mask.nii' ...
%     'Cingulum_hippocampus_R_mask.nii' ...
%     'Inferior_fronto-occipital_fasciculus_L_mask.nii' ...
%     'Inferior_fronto-occipital_fasciculus_R_mask.nii' ...
%     'Inferior_longitudinal_fasciculus_L_mask.nii' ...
%     'Inferior_longitudinal_fasciculus_R_mask.nii' ...
%     'Superior_longitudinal_fasciculus_L_mask.nii' ...
%     'Superior_longitudinal_fasciculus_R_mask.nii' ...
%     'Uncinate_fasciculus_L_mask.nii' ...
%     'Uncinate_fasciculus_R_mask.nii' ...
%     'CCg_L_gt20.nii' ...
%     'CCg_R_gt20.nii' ...
%     'CH_L_gt20.nii' ...
%     'CH_R_gt20.nii' ...
%     'IFOF_L_gt20.nii' ...
%     'IFOF_R_gt20.nii' ...
%     'ILF_L_gt20.nii' ...
%     'ILF_R_gt20.nii' ...
%     'SLF_L_gt20.nii' ...
%     'SLF_R_gt20.nii' ...
%     'UF_L_gt20.nii' ...
%     'UF_R_gt20.nii' ...
%     };
hbclass = zeros(size(subjclass,2),size(excludelist,2));
for x = 1:size(excludelist,2)
    inclvals = zeros(size(vals,1),size(vals,2));
    inclvalsctr = 1;
    inclnames = [];
    for i = 1:size(vals,2)
       if isempty(regexp(valnames{i},excludelist{x}))
           inclnames{inclvalsctr} = valnames(i);
           inclvals(:,inclvalsctr) = vals(:,i);
           inclvalsctr = inclvalsctr+1;
       end
    end
    inclvals(:,inclvalsctr:end) = [];
    for i = 1:size(subjclass,2)
        remclass = subjclass;
        remvals = inclvals;
        testsubj = subjclass(i);
        testvals = inclvals(i,:);
        remclass(i)=[];
        remvals(i,:)=[];
        linclass = fitcdiscr(remvals,remclass);
        hbclass(i,x) = predict(linclass,testvals);
    end
end
for x = 1:size(excludelist,2)
    s = ['no ',excludelist{x},' classified ' num2str(sum(abs(subjclass'-hbclass(:,x)))),' incorrectly'];
    disp(s)
end

   

