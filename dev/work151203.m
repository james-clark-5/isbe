predictor = build_predictor(...
    'predictor_name',       unixenv('PREDICTOR_NAME','predictor'), ...
    'task_id',				unixenv('SGE_TASK_ID',1), ...
    'job_id',				unixenv('JOB_ID','test_precompute'), ...
    ... % Folders
    'image_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('IMAGE_ROOT', 'data/rsa_study/set12g_half')],...
    'model_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('MODEL_ROOT', 'models/vessel')], ...
	... % Output parameters
    'output_type',          unixenv('OUTPUT_TYPE', 'width'), ...
	... % Sampling parameters
    'num_samples',			unixenv('NUM_SAMPLES',1000), ...
    'max_n_images',         unixenv('MAX_N_IMAGES',[]), ...
    'shift_images',         unixenv('SHIFT_IMAGES',false), ...
    'bg_ratio',				unixenv('BG_RATIO',1), ...
    'replace_sample',       unixenv('REPLACE_SAMPLE', false), ...
    'sampling_method',      unixenv('SAMPLING_METHOD','generate_training_data'), ...
    'shrink_fov',           unixenv('SHRINK_FOV',false), ...
    'image_type', 			unixenv('IMAGE_TYPE','real'), ...
        ... % Image sampling parameters
        'image_dir',            unixenv('IMAGE_DIR', 'images'),...
        'fov_mask_dir',         unixenv('FOV_MASK_DIR', 'fov_masks'),...
        'fg_mask_dir',          unixenv('FG_MASK_DIR', 'vessel_masks'),...
        'prediction_dir',       unixenv('PREDICTION_DIR', 'predictions'),...
        'probability_dir',      unixenv('PROBABILITY_DIR', ''),...
        'precomputed_indices_dir', unixenv('PRECOMPUTED_INDICES_DIR', ''),...
        'class_label_dir',          unixenv('CLASS_DIR', []),...
        'ori_dir',              unixenv('ORI_DIR', 'orientations'),...
        'width_dir',            unixenv('WIDTH_DIR', 'width_maps'), ...
        'make_resampling_maps',          unixenv('MAKE_RESAMPLING_MAPS', 0.5), ...
        ... % Saved training data parameters
        'save_training_data',	unixenv('SAVE_TRAINING_DATA',false), ...
        'training_data_dir', 	unixenv('TRAINING_DATA_DIR','saved_training_data'), ...
        'training_data',		unixenv('TRAINING_DATA',''), ... % ???
        'training_labels',		unixenv('TRAINING_LABELS',''), ... % ???
	... % Image feature/decomposition parameters
    'num_levels', 			unixenv('NUM_LEVELS',5), ...
    'rgb_channel',          unixenv('RGB_CHANNEL','rgb'), ...
    'normalise', 			unixenv('NORMALISE',0), ...
    'win_size',				unixenv('WIN_SIZE',1), ...
    'pca_filename',         unixenv('PCA_FILENAME',[]), ...
    'do_max',				unixenv('DO_MAX',false), ...
    'rotate',				unixenv('ROTATE',false), ...
    'decomp_type', 			{'g2dia','h2dia'}, ...
        ... % Gaussian derivative parameters
        'sigma_range', 			unixenv('SIGMA_RANGE',[2 5]), ...
        'num_angles', 			unixenv('NUM_ANGLES',6), ...
    ... % Predictor parameters
    'prediction_type',		unixenv('PREDICTION_TYPE','rf_regression'), ...
        ... % Tree/Forest parameters
        'n_trees',				unixenv('NUM_TREES',2), ...
        'split_criterion_c',    unixenv('SPLIT_CRITERION_C','gdi'),...
        'split_criterion_r',    unixenv('SPLIT_CRITERION_R','ssq'),...
        'var_criterion_c',		unixenv('VAR_CRITERION_C','mabs'),...
        'var_criterion_r',		unixenv('VAR_CRITERION_R','ssq'),...
        'split_min',			unixenv('SPLIT_MIN',10), ...
        'end_cut_min',			unixenv('END_CUT_MIN',1), ...
        'do_ubound',			unixenv('DO_UBOUND',1), ...
        'do_circular',			unixenv('DO_CIRCULAR',[]), ...
        'w_prior',				unixenv('W_PRIOR',0), ...
        'impure_thresh',		unixenv('IMPURE_THRESH',1e-4), ...
        'minimise_size',		unixenv('MINIMIZE_TREE',0), ...
        'd',                    unixenv('d',[]), ...
        'quiet',                unixenv('QUIET', 0),...
    ... % Miscellaneous parameters
    'overwrite',			unixenv('OVERWRITE',false), ...
    'use_nag',				unixenv('USE_NAG',false),...
    'rand_seed',			unixenv('RAND_SEED',[]) ...
);
%%
idx_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\precomputed_indices\01\';
im_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\images\';
im_list = dir([im_dir '*.mat']);

create_folder(idx_dir);
num_images = length(im_list);

for i_im = 1:num_images
    fg_indices = randperm(100,10);
    bg_indices = [];
    save([idx_dir im_list(i_im).name(1:end-4) '_idx.mat'], 'fg_indices', 'bg_indices');
end
%%
predictor = build_predictor(...
    'predictor_name',       unixenv('PREDICTOR_NAME','predictor'), ...
    'task_id',				unixenv('SGE_TASK_ID',1), ...
    'job_id',				unixenv('JOB_ID','test_precomputed'), ...
    ... % Folders
    'image_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('IMAGE_ROOT', 'data/rsa_study/set12g_half')],...
    'model_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('MODEL_ROOT', 'models/vessel')], ...
	... % Output parameters
    'output_type',          unixenv('OUTPUT_TYPE', 'width'), ...
	... % Sampling parameters
    'num_samples',			unixenv('NUM_SAMPLES',10*num_images), ...
    'max_n_images',         unixenv('MAX_N_IMAGES',[]), ...
    'shift_images',         unixenv('SHIFT_IMAGES',false), ...
    'bg_ratio',				unixenv('BG_RATIO',1), ...
    'replace_sample',       unixenv('REPLACE_SAMPLE', false), ...
    'sampling_method',      unixenv('SAMPLING_METHOD','generate_training_data'), ...
    'shrink_fov',           unixenv('SHRINK_FOV',false), ...
    'image_type', 			unixenv('IMAGE_TYPE','real'), ...
        ... % Image sampling parameters
        'image_dir',            unixenv('IMAGE_DIR', 'images'),...
        'fov_mask_dir',         unixenv('FOV_MASK_DIR', 'fov_masks'),...
        'fg_mask_dir',          unixenv('FG_MASK_DIR', 'vessel_masks'),...
        'prediction_dir',       unixenv('PREDICTION_DIR', 'predictions'),...
        'probability_dir',      unixenv('PROBABILITY_DIR', ''),...
        'precomputed_indices_dir', unixenv('PRECOMPUTED_INDICES_DIR', 'precomputed_indices\01'),...
        'class_label_dir',          unixenv('CLASS_DIR', []),...
        'ori_dir',              unixenv('ORI_DIR', 'orientations'),...
        'width_dir',            unixenv('WIDTH_DIR', 'width_maps'), ...
        'make_resampling_maps',          unixenv('MAKE_RESAMPLING_MAPS', 0.5), ...
        ... % Saved training data parameters
        'save_training_data',	unixenv('SAVE_TRAINING_DATA',false), ...
        'training_data_dir', 	unixenv('TRAINING_DATA_DIR','saved_training_data'), ...
        'training_data',		unixenv('TRAINING_DATA',''), ... % ???
        'training_labels',		unixenv('TRAINING_LABELS',''), ... % ???
	... % Image feature/decomposition parameters
    'num_levels', 			unixenv('NUM_LEVELS',5), ...
    'rgb_channel',          unixenv('RGB_CHANNEL','rgb'), ...
    'normalise', 			unixenv('NORMALISE',0), ...
    'win_size',				unixenv('WIN_SIZE',1), ...
    'pca_filename',         unixenv('PCA_FILENAME',[]), ...
    'do_max',				unixenv('DO_MAX',false), ...
    'rotate',				unixenv('ROTATE',false), ...
    'decomp_type', 			{'g2dia','h2dia'}, ...
        ... % Gaussian derivative parameters
        'sigma_range', 			unixenv('SIGMA_RANGE',[2 5]), ...
        'num_angles', 			unixenv('NUM_ANGLES',6), ...
    ... % Predictor parameters
    'prediction_type',		unixenv('PREDICTION_TYPE','rf_regression'), ...
        ... % Tree/Forest parameters
        'n_trees',				unixenv('NUM_TREES',2), ...
        'split_criterion_c',    unixenv('SPLIT_CRITERION_C','gdi'),...
        'split_criterion_r',    unixenv('SPLIT_CRITERION_R','ssq'),...
        'var_criterion_c',		unixenv('VAR_CRITERION_C','mabs'),...
        'var_criterion_r',		unixenv('VAR_CRITERION_R','ssq'),...
        'split_min',			unixenv('SPLIT_MIN',10), ...
        'end_cut_min',			unixenv('END_CUT_MIN',1), ...
        'do_ubound',			unixenv('DO_UBOUND',1), ...
        'do_circular',			unixenv('DO_CIRCULAR',[]), ...
        'w_prior',				unixenv('W_PRIOR',0), ...
        'impure_thresh',		unixenv('IMPURE_THRESH',1e-4), ...
        'minimise_size',		unixenv('MINIMIZE_TREE',0), ...
        'd',                    unixenv('d',[]), ...
        'quiet',                unixenv('QUIET', 0),...
    ... % Miscellaneous parameters
    'overwrite',			unixenv('OVERWRITE',1), ...
    'use_nag',				unixenv('USE_NAG',false),...
    'rand_seed',			unixenv('RAND_SEED',[]) ...
);
%%
im_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\images\';
width_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\log_width_maps\';
fg_mask_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\vessel_masks\';
fov_mask_dir = 'C:\isbe\nailfold\data\rsa_study\set12g_half\fov_masks\';

all_fg_indices_by_im = cell(num_images,1);
all_widths_by_im = cell(num_images, 1);
total_samples = 0;
for i_im = 1:num_images
    im_name = im_list(i_im).name(1:end-4);
    width_map = u_load([width_dir im_name '_width.mat']);
    vessel_mask = u_load([fg_mask_dir im_name '_v_mask.mat']);
    fov_mask = u_load([fov_mask_dir im_name '_f_mask.mat']);
    vessel_mask = vessel_mask & fov_mask;
    
    all_fg_indices_by_im{i_im} = find(vessel_mask);
    all_widths_by_im{i_im} = width_map(vessel_mask);
    total_samples = total_samples + sum(vessel_mask(:));
end
%
all_fg_indices = zeros(total_samples,1);
all_widths = zeros(total_samples, 1);

curr_sample = 0;
for i_im = 1:num_images
    idx = curr_sample + (1:length(all_fg_indices_by_im{i_im}));
    curr_sample = idx(end);
    all_fg_indices(idx) = all_fg_indices_by_im{i_im};
    all_widths(idx) = all_widths_by_im{i_im};
end

all_widths = all_widths + rand(total_samples,1)/100;

min_width = min(all_widths);
max_width = max(all_widths);

%%
num_samples = 5e4;
num_trees = 100;
num_images = length(im_list);
for i_tree = 1:num_trees
    
    %Create folder in which to save precomputed indices
    idx_dir = ['C:\isbe\nailfold\data\rsa_study\set12g_half\precomputed_indices\tree' zerostr(i_tree,2) '\'];
    create_folder(idx_dir);
    
    %sample uniformly
    r_idx = sample_to_uniformity(all_widths, num_samples, 1, max_width);

    %now loop back through images to adjust global indices to indices
    %specific to each image
    r_fg_indices_by_im = cell(num_images,1);
    start_sample = 0;
    end_sample = length(all_fg_indices_by_im{1});
    for i_im = 1:num_images
        end_sample = start_sample + length(all_fg_indices_by_im{i_im});

        r_idx_i = r_idx(r_idx > start_sample & r_idx <= end_sample) - start_sample;
        start_sample = end_sample;

        r_fg_indices_by_im{i_im} = all_fg_indices_by_im{i_im}(r_idx_i);
        fg_indices = r_fg_indices_by_im{i_im};
        bg_indices = [];
        %display([num2str(length(r_idx_i)) ' samples in image ' num2str(i_im)]);
        
        %save these indices
        save([idx_dir im_list(i_im).name(1:end-4) '_idx.mat'], 'fg_indices', 'bg_indices');
    end
    
    %Check that the indice actually do sample from the width maps as
    %intended
    if i_tree <= 5
        sampled_widths = zeros(num_samples,1);
        curr_sample = 0;
        for i_im = 1:num_images
            idx = curr_sample + (1:length(r_fg_indices_by_im{i_im}));
            curr_sample = idx(end);

            im_name = im_list(i_im).name(1:end-4);
            width_map = u_load([width_dir im_name '_width.mat']);

            sampled_widths(idx) = width_map(r_fg_indices_by_im{i_im});
        end
        figure; hist(sampled_widths, 100);
    end
end
%%
precompute_indices.precompute_method = 'sample_to_uniformity';
precompute_indices.precompute_args.all_fg_indices = all_fg_indices_by_im;
precompute_indices.precompute_args.values = all_widths;
precompute_indices.precompute_args.num_samples = num_samples;
precompute_indices.precompute_args.start_value = 1;
precompute_indices.precompute_args.end_value = max_width;

predictor = build_predictor(...
    'predictor_name',       unixenv('PREDICTOR_NAME','predictor'), ...
    'task_id',				unixenv('SGE_TASK_ID',1), ...
    'job_id',				unixenv('JOB_ID','uniform_log_width'), ...
    ... % Folders
    'image_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('IMAGE_ROOT', 'data/rsa_study/set12g_half')],...
    'model_root',           [unixenv('DATA_ROOT', nailfoldroot) unixenv('MODEL_ROOT', 'models/vessel')], ...
	... % Output parameters
    'output_type',          unixenv('OUTPUT_TYPE', 'width'), ...
	... % Sampling parameters
    'num_samples',			unixenv('NUM_SAMPLES',num_samples), ...
    'max_n_images',         unixenv('MAX_N_IMAGES',[]), ...
    'shift_images',         unixenv('SHIFT_IMAGES',false), ...
    'bg_ratio',				unixenv('BG_RATIO',1), ...
    'replace_sample',       unixenv('REPLACE_SAMPLE', false), ...
    'sampling_method',      unixenv('SAMPLING_METHOD','generate_training_data'), ...
    'shrink_fov',           unixenv('SHRINK_FOV',false), ...
    'image_type', 			unixenv('IMAGE_TYPE','real'), ...
        ... % Image sampling parameters
        'image_dir',            unixenv('IMAGE_DIR', 'images'),...
        'fov_mask_dir',         unixenv('FOV_MASK_DIR', 'fov_masks'),...
        'fg_mask_dir',          unixenv('FG_MASK_DIR', 'vessel_masks'),...
        'prediction_dir',       unixenv('PREDICTION_DIR', 'predictions'),...
        'probability_dir',      unixenv('PROBABILITY_DIR', ''),...
        'precompute_indices', unixenv('PRECOMPUTE_INDICES', precompute_indices),...
        'class_label_dir',          unixenv('CLASS_DIR', []),...
        'ori_dir',              unixenv('ORI_DIR', 'orientations'),...
        'width_dir',            unixenv('WIDTH_DIR', 'log_width_maps'), ...
        'make_resampling_maps',          unixenv('MAKE_RESAMPLING_MAPS', 0.5), ...
        ... % Saved training data parameters
        'save_training_data',	unixenv('SAVE_TRAINING_DATA',false), ...
        'training_data_dir', 	unixenv('TRAINING_DATA_DIR','saved_training_data'), ...
        'training_data',		unixenv('TRAINING_DATA',''), ... % ???
        'training_labels',		unixenv('TRAINING_LABELS',''), ... % ???
	... % Image feature/decomposition parameters
    'num_levels', 			unixenv('NUM_LEVELS',5), ...
    'rgb_channel',          unixenv('RGB_CHANNEL','rgb'), ...
    'normalise', 			unixenv('NORMALISE',0), ...
    'win_size',				unixenv('WIN_SIZE',3), ...
    'pca_filename',         unixenv('PCA_FILENAME',[]), ...
    'do_max',				unixenv('DO_MAX',false), ...
    'rotate',				unixenv('ROTATE',false), ...
    'decomp_type', 			{'g2dia','h2dia'}, ...
        ... % Gaussian derivative parameters
        'sigma_range', 			unixenv('SIGMA_RANGE',[2 5]), ...
        'num_angles', 			unixenv('NUM_ANGLES',6), ...
    ... % Predictor parameters
    'prediction_type',		unixenv('PREDICTION_TYPE','rf_regression'), ...
        ... % Tree/Forest parameters
        'n_trees',				unixenv('NUM_TREES',100), ...
        'split_criterion_c',    unixenv('SPLIT_CRITERION_C','gdi'),...
        'split_criterion_r',    unixenv('SPLIT_CRITERION_R','ssq'),...
        'var_criterion_c',		unixenv('VAR_CRITERION_C','mabs'),...
        'var_criterion_r',		unixenv('VAR_CRITERION_R','ssq'),...
        'split_min',			unixenv('SPLIT_MIN',100), ...
        'end_cut_min',			unixenv('END_CUT_MIN',25), ...
        'do_ubound',			unixenv('DO_UBOUND',1), ...
        'do_circular',			unixenv('DO_CIRCULAR',[]), ...
        'w_prior',				unixenv('W_PRIOR',0), ...
        'impure_thresh',		unixenv('IMPURE_THRESH',1e-4), ...
        'minimise_size',		unixenv('MINIMIZE_TREE',0), ...
        'd',                    unixenv('d',[]), ...
        'quiet',                unixenv('QUIET', 0),...
    ... % Miscellaneous parameters
    'overwrite',			unixenv('OVERWRITE',1), ...
    'use_nag',				unixenv('USE_NAG',false),...
    'rand_seed',			unixenv('RAND_SEED',[]) ...
);
%%
DECOMP_TYPE="{'g2dia','h2dia'}" 
NUM_ANGLES=6 
WIN_SIZE=3 
SIGMA_RANGE="[2 5]" 
OUTPUT_TYPE="width" 
PREDICTION_TYPE="rf_regression" 
MASK_DIR="vessel_centre_masks" 
NUM_TREES=10 
IMAGE_TYPE="real" 
DATA_ROOT="scratch/nailfold/" 
IMAGE_ROOT="data/rsa_study/set12g_half" 
NUM_SAMPLES=50000 
MODEL_ROOT="models/vessel" qsub -V -l twoday -t 1-10 matlab_code/trunk/hydra/cuc/build_predictor.sh
%%
[all_rf_widths all_gt_widths profile_features model_scores  g2d_features] =...
    training_patch_at_apex(1,450,0);
%
gf = permute(g2d_features, [2 3 1]);
gf = gf(:,:)';
rf_w1 = u_load('C:\isbe\nailfold\models\vessel\width\rf_regression\297037\predictor.mat');
rf_w2 = u_load('C:\isbe\nailfold\models\vessel\width\rf_regression\uniform_log_width\predictor01.mat');
w1 = random_forest_reg_predict(rf_w1, gf, 0);
w2 = random_forest_reg_predict(rf_w2, gf, 0);
w2e = exp(w2);

figure; axis equal; hold all;
plot(all_gt_widths(:), w1, 'r.');
plot([0 120], [0 120], 'k');

figure; axis equal; hold all;
plot(all_gt_widths(:), w2e, 'r.');
plot([0 120], [0 120], 'k');
%%
[co_occurrence_mat_post detected_widths missed_widths ...
    a_b_widths a_c_widths b_c_widths  a_u_widths b_u_widths] = miccai_results_cooc_fun(...
    'image_names',          im_names,...
    'data_dir',             [nailfoldroot 'data/rsa_study/master_set/'],...
    'prob_dir',             'rf_classification/296655',...
    'cluster_dir',          'apex_clusters_merged',...
    'candidates_dir',       'apex_maps\set12g_half_296655\miccai_maxima\rescores',...
    'selected_dir',         'apex_maps\set12g_half_296655\miccai_maxima\selected_apexes',...
    'metrics_dir',          'apex_maps\set12g_half_296655\miccai_maxima\apex_metrics',...
    'do_distal',            1,...
    'do_nondistal',         1,...
    'use_post_processing',  1,...
    'plot', 0);
%%
feature_str = 'uniform width';
feature_str(feature_str == '_') = ' ';
feature_str(1) = feature_str(1) - 32;

a_b_widths_all = zeros(0,2);
a_u_widths_all = zeros(0,2);
b_u_widths_all = zeros(0,2);
for i_im = 1:length(a_b_widths)
    a_b_widths_all = [a_b_widths_all; a_b_widths{i_im}]; %#ok
    a_u_widths_all = [a_u_widths_all; a_u_widths{i_im}]; %#ok
    b_u_widths_all = [b_u_widths_all; b_u_widths{i_im}]; %#ok
end

figure; 
subplot(1,2,1); hold all;
plot(sort(abs(diff(a_b_widths_all,1,2))), linspace(0,1,size(a_b_widths_all,1)), 'linewidth', 2);
plot(sort(abs(diff(a_u_widths_all,1,2)-2)), linspace(0,1,size(a_u_widths_all,1)), 'linewidth', 2);
plot(sort(abs(diff(b_u_widths_all,1,2)-2)), linspace(0,1,size(b_u_widths_all,1)), 'linewidth', 2);
title(['CDF of absolute differences in width prediction (' feature_str ')']);
legend({'|B - A|', '|C - A|', '|C - B|'}, 'location', 'southeast');
xlabel('Absolute width difference');
ylabel('% of data');
axis([0 20 0 1]);

subplot(1,2,2); hold all;
plot(sort(diff(a_b_widths_all,1,2)), linspace(0,1,size(a_b_widths_all,1)), 'linewidth', 2);
plot(sort(diff(a_u_widths_all,1,2)-2), linspace(0,1,size(a_u_widths_all,1)), 'linewidth', 2);
plot(sort(diff(b_u_widths_all,1,2)-2), linspace(0,1,size(b_u_widths_all,1)), 'linewidth', 2);
title(['CDF of signed differences in width prediction (' feature_str ')']);
legend({'B - A', 'C - A', 'C - B'}, 'location', 'southeast');
xlabel('Width difference');
ylabel('% of data');
axis([-20 20 0 1]);
plot([0 0], [0 1], 'k--');
plot([-20 20], [0.5 0.5], 'k--');

figure; 
subplot(1,2,1); hold all;
plot(sort(abs(diff(a_b_widths_all,1,2)) ./ mean(a_b_widths_all,2)), linspace(0,1,size(a_b_widths_all,1)), 'linewidth', 2);
plot(sort(abs(diff(a_u_widths_all,1,2)) ./ mean(a_b_widths_all,2)), linspace(0,1,size(a_u_widths_all,1)), 'linewidth', 2);
plot(sort(abs(diff(b_u_widths_all,1,2)) ./ mean(a_b_widths_all,2)), linspace(0,1,size(b_u_widths_all,1)), 'linewidth', 2);
title(['CDF of absolute differences in width prediction (' feature_str ')']);
legend({'|B - A|', '|C - A|', '|C - B|'}, 'location', 'southeast');
xlabel('Absolute width difference');
ylabel('% of data');
axis([0 20 0 1]);
%%
im_list = dir('C:\isbe\nailfold\data\rsa_study\set12g_half\images\*.mat');
%%
for i_im = 711:720
    vessel_im = u_load(['C:\isbe\nailfold\data\rsa_study\set12g_half\images\' im_list(i_im).name(1:end-4) '.mat']);
    width_gt = u_load(['C:\isbe\nailfold\data\rsa_study\set12g_half\width_maps\' im_list(i_im).name(1:end-4) '_width.mat']);
    width_pred = u_load(['C:\isbe\nailfold\data\rsa_study\set12g_half\predictions\width\rf_regression\297037\' im_list(i_im).name(1:end-4) '_pred.mat']);
    vessel_mask = u_load(['C:\isbe\nailfold\data\rsa_study\set12g_half\vessel_masks\' im_list(i_im).name(1:end-4) '_v_mask.mat']);
    
    width_error = width_gt - width_pred;
    width_error(~vessel_mask) = 0;
    figure; 
    subplot(1,2,1); imgray(vessel_im); colorbar
    subplot(1,2,2); imgray(abs(width_error)); colorbar; %colormap(jet(256)); 
end
%%
extract_apex_measures_set(...
    'image_names',          im_names(3),...
    'data_dir',             [nailfoldroot 'data/rsa_study/master_set/'],...
    'image_dir',            'images',...
    'prob_dir',             'rf_classification/296655',...
    'ori_dir',              'rf_regression/296621',...
    'width_dir',            'rf_regression/297037',...
    'candidates_dir',       'apex_maps\set12g_half_296655\miccai_maxima\rescores',...
    'displacements_dir',    'apex_maps\set12g_half_296655\miccai_maxima\displacements',...
    'selected_dir',         'apex_maps\set12g_half_296655\miccai_maxima\selected_apexes',...
    'metrics_dir',          'temp_metrics',...
    'width_predictor',      [],...[nailfoldroot 'models/apex/width/rf.mat'],...
    'prob_sigma',           0,...
    'ori_sigma',            0,...
    'width_sigma',          2,...
    'all',                  0,...
    'overwrite',            1,...
    'do_aam',               0,...
    'do_nondistal',         0,...
    'plot', 1);


    


    
    